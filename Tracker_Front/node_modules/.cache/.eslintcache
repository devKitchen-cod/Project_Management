[{"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/index.js":"1","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Nav.js":"2","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/rootReducer.js":"3","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/GuardPro.js":"4","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/actions.js":"5","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Auth.js":"6","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Login.js":"7","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/StartPage.js":"8","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Tracker.js":"9","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Project.js":"10","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Create.js":"11","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/VueProject.js":"12","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Header/NavBar.js":"13","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/redux-types.js":"14","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/DisplayComponent.js":"15","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/BtnComponent.js":"16","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Chat.js":"17","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/Developers.js":"18","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/Tasks.js":"19"},{"size":606,"mtime":1643281813204,"results":"20","hashOfConfig":"21"},{"size":1503,"mtime":1645618150277,"results":"22","hashOfConfig":"21"},{"size":5174,"mtime":1645608941656,"results":"23","hashOfConfig":"21"},{"size":393,"mtime":1645540146417,"results":"24","hashOfConfig":"21"},{"size":7795,"mtime":1645618269815,"results":"25","hashOfConfig":"21"},{"size":3878,"mtime":1645618112133,"results":"26","hashOfConfig":"21"},{"size":2643,"mtime":1643897297898,"results":"27","hashOfConfig":"21"},{"size":2742,"mtime":1645528763820,"results":"28","hashOfConfig":"21"},{"size":3380,"mtime":1643716649225,"results":"29","hashOfConfig":"21"},{"size":5435,"mtime":1645606965693,"results":"30","hashOfConfig":"21"},{"size":1920,"mtime":1645529461614,"results":"31","hashOfConfig":"21"},{"size":6499,"mtime":1645012904239,"results":"32","hashOfConfig":"21"},{"size":2047,"mtime":1645617327161,"results":"33","hashOfConfig":"21"},{"size":1311,"mtime":1645096866432,"results":"34","hashOfConfig":"21"},{"size":617,"mtime":1640095051513,"results":"35","hashOfConfig":"21"},{"size":915,"mtime":1640095051513,"results":"36","hashOfConfig":"21"},{"size":872,"mtime":1644416083361,"results":"37","hashOfConfig":"21"},{"size":4291,"mtime":1645110337152,"results":"38","hashOfConfig":"21"},{"size":11155,"mtime":1644934469341,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"ziu49k",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/index.js",["93"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n import Nav from './Nav'\n import thunk from 'redux-thunk';\n import { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer, setemail } from \"./Utils/redux/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nimport \"../src/Styles/indexstyle.css\"\n\nexport const store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nReactDOM.render(\n\n <Provider store ={store}>\n  <Nav/>\n  </Provider>\n \n  \n   , document.getElementById(\"root\"));","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Nav.js",["94"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Auth from './Component/Main/Auth';\nimport Login from './Component/Main/Login';\nimport Vue_Project from './Component/Main/vueProject/VueProject';\nimport GuardedRoute from './Utils/GuardPro';\nimport StartPage from './Component/Main/StartPage'\nimport Tracker from './Component/Main/Tracker'\nimport Project from './Component/Main/Project'\nimport Create from './Component/Main/Create'\nimport NavBar from './Component/Header/NavBar';\nimport { reqChekToken } from './Utils/redux/actions';\n\nexport default function Nav(){\n  const item = useSelector((state) => state.enter)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const token = localStorage.getItem('token')  \n      dispatch(reqChekToken(token))\n  }, [])\n  return (\n\n    <Router>\n      <NavBar/>       \n      <Switch>                         \n        <GuardedRoute path = '/vue_project' component = {Vue_Project} auth = {item}/>          \n        <GuardedRoute path = '/create'  component = {Create}   auth = {item}/>  \n        <GuardedRoute path = '/project' component = {Project}  auth = {item}/>  \n        <GuardedRoute path = '/tracker' component = {Tracker}  auth = {item}/> \n\n        <Route path = '/auth'><Auth/></Route>\n        <Route path = '/login'><Login/></Route>\n        <Route path = \"/\"><StartPage/></Route>\n      </Switch>\n    </Router>\n  )\n}","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/rootReducer.js",["95","96"],"import { CREATETASK, GETUSERS, LOGIN, LOGOUT, SETEMAIL, SETNAME, SETNAMEOFPROJECT, SETNAMETASK, SETPASSWORD, SETPROJECT, SETPROJECTFORTASK, SETTEXTTASK, SETTIMETASK, SETPROJECTTIME, READTASK, SETUSERTASK, SETTASKFORTRACKING, SETIDPRO, DELETEPROJECT, SETSTATUS, SET_PLANNED_TASK, SET_INPROGRESS_TASK, SET_DONE_TASK, SET_CHANGED_TASK, SETDESCRIPTIONOFPROJECT, GETDESCRIPTIONOFPROJECT, SETPROFFETION, GETCEO, GETDEVOPS, GETDEVELOPERS  } from \"./redux-types\";\nimport { combineReducers } from \"redux\"\n\nconst init = {\n  isAuth: false\n}\nfunction Login(state = init, action){ //login\n  switch (action.type) {\n    case LOGIN:{     \n      return {...state, isAuth: action.payload}\n    }\n    case LOGOUT:{\n      const user = action.playload\n      return[...state, user]\n    }  \n    default:return state \n  }\n}\nconst init_auth ={\n  email: '',\n  name: '',\n  password: '',\n  proffetion:'',\n\n  ceo:[],\n  devops:[],\n  developer:[]\n}\nfunction Auth(state = init_auth, action){ //Auth\n  switch(action.type){\n    case SETEMAIL:{\n      return {...state, email: action.payload}\n    }\n   case SETNAME: {\n      return {...state, name: action.payload}\n  }\n  case SETPASSWORD: {\n    return {...state, password: action.payload}\n  }\n  case SETPROFFETION:{\n    return {...state, proffetion: action.payload}\n  }\n  \n  case GETCEO:{\n    return {...state, ceo:action.payload}    \n  }\n  case GETDEVOPS:{\n    return {...state, devops:action.payload}    \n  }\n  case GETDEVELOPERS:{\n    return {...state, developer:action.payload}    \n  }\n  default: return state \n  }\n}\n\n\nconst init_name_of_project = { //project\n  name_of_project: '',\n  list_of_projects: [],\n  time_of_project: 0,\n  deleted_project:'',\n  descrip_project: '',\n  get_descrip_proj: ''\n}\nfunction Project( state = init_name_of_project, action){\n  switch(action.type){\n    case SETNAMEOFPROJECT: {\n      return {...state, name_of_project: action.payload}\n    }\n    case SETDESCRIPTIONOFPROJECT:{\n      return{...state, descrip_project: action.payload}\n    }\n    // case GETDESCRIPTIONOFPROJECT:{\n    //   return{...state, get_descrip_proj:action.payload}\n    // }\n    case SETPROJECT: {\n      return {...state, list_of_projects: action.payload}\n    }\n    case SETPROJECTTIME:{\n      return {...state, time_of_project: action.payload}\n    }\n    //Delete\n    case DELETEPROJECT:{\n      return {...state, deleted_project: action.payload}\n    }\n    default: return state\n  }\n}\n\nconst init_task = { \n  //--for creating task----------\n  nameTask: '',\n  timeTask: '',\n  textTask: '',\n  nameProject: '',\n  allUsers: [],\n  selectedProject: '',\n  selectedUser: '',\n\n  taskfortracking: '',\n  idforproj: '',\n  //--for reading tasks by status--------------\n  status: '',\n  readedTask: [], //all tasks\n  planned: [],\n  inprogress: [],\n  done:[],\n  changed_task: ''\n}\nfunction Task(state = init_task, action){  //task\n  switch(action.type){\n    case SETNAMETASK:{\n      return {...state, nameTask: action.payload}\n    }\n    case SETTIMETASK: {\n      return {...state, timeTask: action.payload}\n    }\n    case SETTEXTTASK:{\n      return {...state, textTask: action.payload}\n    }\n    case GETUSERS:{\n      return{...state, allUsers: action.payload}\n    }\n    case SETPROJECTFORTASK:{\n      return{...state, selectedProject: action.payload}\n    }\n    case READTASK:{\n      return {...state, readedTask: action.payload}\n    }\n    case SETUSERTASK: {\n      return {...state, selectedUser: action.payload}\n    }\n    case SETTASKFORTRACKING: {\n      return {...state, taskfortracking: action.payload}\n    }\n    case SETIDPRO: {\n      return {...state, idforproj: action.payload}\n    }\n    case SETSTATUS: {\n      return {...state, status: action.payload}\n    }\n    case SET_PLANNED_TASK:{\n      return {...state, planned: action.payload}\n    }\n    case SET_INPROGRESS_TASK:{\n      return {...state, inprogress: action.payload}\n    }\n    case SET_DONE_TASK:{\n      return {...state, done: action.payload}\n    }\n    case SET_CHANGED_TASK:{\n      return {...state, changed_task: action.payload}\n    }\n\n    default: return state\n  }\n}\n\n\nconst initialState = {\n  success: false,\n  created: false,\n  deleted: false,\n  loading: false,\n  error: false,\n  change:false\n\n  \n};\nconst Flags = (state = initialState, action) => { //true/false flags\n  switch (action.type) {\n    case 'start_req':\n      return {\n        success: false,\n        loading: true,\n      };\n    case 'req_success':\n      return {\n        success: true,\n      };\n    case 'err_req':\n      return {\n        loading: false,\n        error: true,\n      };      \n    case 'success_create':\n      return {\n        created: true\n      };\n    case 'err_create':\n      return {\n        created: false\n      };       \n    case 'deleted':\n      return{\n        deleted: true\n      }  \n    case 'success_change_status':{\n      return{\n        change:true\n      }\n    }\n    case 'stop_change_status':{\n      return{\n        change:false\n      }\n    }\n    case 'stop_deleting':{\n      return{\n        deleted: false\n      }\n    }\n    default:\n      return state;\n  }  \n};\n\n  \n\n\nexport const rootReducer = combineReducers({\n  enter: Login,\n  setAuth: Auth,\n  setProject: Project,\n  setTask: Task,\n  reducer: Flags,\n  \n  \n})","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/GuardPro.js",[],"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/actions.js",["97","98","99"],"import axios from 'axios'\nimport { GETCEO, GETDESCRIPTIONOFPROJECT, GETDEVELOPERS, GETDEVOPS, GETUSERS, LOGIN, READTASK, SETEMAIL, SETNAME, SETNAMETASK, SETPASSWORD, SETPROFFETION, SETPROJECT, SET_DONE_TASK, SET_INPROGRESS_TASK, SET_PLANNED_TASK } from './redux-types'\n\nconst start_login = () => {\n  return {type: 'start_req'}\n}\n\nconst success_login = () =>{\n  return{type: 'req_success'}\n}\n\nconst err_login = () => {\n  return {type: 'err_req'}\n}\n\nconst success_create = () =>{\n  return{type: 'success_create'}\n}\n\nconst err_create = () => {\n  return {type: 'err_create'}\n}\nconst deleted = () => {\n  return{type: 'deleted'}\n}\nexport const stop_deleting = () =>{\n  return{type: 'stop_deleting'}\n}\n\nconst start_change =() =>{\n  return{type: 'success_change_status'}\n}\n\nconst stop_change =() =>{\n  return{type: 'stop_change_status'}\n}\n\n//============Create user and login==================================\n\nexport const reqChekToken = (token) => {\n  return(dispatch) => {\n    \n    axios.post(\n      \"http://localhost:8080/api/checktoken\",\n      {},\n      { headers: { authorization: token } }\n    ) .then((res) => {\n        localStorage.setItem('token', res.data.token);\n        dispatch({type: LOGIN, payload: true})   \n        dispatch({type: SETEMAIL, payload: res.data.email})\n        dispatch({type: SETNAME, payload: res.data.name})\n        dispatch({type: SETPASSWORD, payload: res.data.password})\n        dispatch({type: SETPROFFETION, payload: res.data.proffetion})       \n    }) \n  \n  }\n}\n\n\nexport const reqlogin = (obj) => {\n  return(dispatch) => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/login\",\n      data: {\n        email: obj.email,\n        password: obj.password\n      } \n      \n    })\n    .then((res) => {\n      localStorage.setItem('token', res.data.token);\n      dispatch(success_login())\n      dispatch(err_login())\n    })\n  }\n}\n//http://localhost:8080/\nexport const reqauth = (obj) => {\n  return (dispatch) => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/user\",\n      data: {\n        name: obj.name,\n        email: obj.email,  \n        password: obj.password,\n        proffetion: obj.proffetion\n      }\n    })\n  .then (\n    (data) => dispatch(success_login()),\n    () => dispatch(err_login())\n  )}  \n}\n//============Create user and login==================================\n\n//============Projects==================================\nexport const reqcreateProject = (obj) => {\n  return (dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/project\",\n      data: {\n        name: obj.name_of_project,\n        user: obj.email,\n        description: obj.descrip \n      }\n    })\n    .then (\n      dispatch(success_create()),\n      (err) => dispatch(err_create(err))\n    )}\n}\nexport const reqDeleteProject = (name_project, email) => {\n  return (dispatch) => {\n    console.log('action ----'+name_project, email)\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/delete-project\",\n      data:{name: name_project, user: email}      \n    })\n    .then(      \n      dispatch(deleted())\n\n    )\n  }\n}\nexport const reqsettimeproject = (obj) => {\n  return (dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/tracker\",\n      data: {\n        nameProject: obj.nameProject,     \n        workTime: obj.workTime\n      }\n     })\n     .then (\n       dispatch(success_create()),\n       (err) => dispatch(err_create(err))\n    )}\n}\n\nexport const notcreate = () => {\n  return(dispatch) => {\n    dispatch(err_create())\n  }\n}\nexport const reqsetproject = (obj) => {\n  return (dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allproj\",\n      data: {email: obj.email}\n    })\n    .then((res) => {\n      dispatch({type: SETPROJECT, payload: res.data})\n    }) \n  }\n}\n//============Projects==================================\n\n//===========GetUsers==============================================\nexport const reqGetAllUsers = () =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allusers\",\n    })\n    .then((res) => {\n      dispatch({type: GETUSERS, payload: res.data})\n    })\n  }\n}\nexport const reqGetAllCEO = (ceo) =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allceo\",\n      data:{ceo:ceo}\n    })\n    .then((res) => {\n      dispatch({type: GETCEO, payload: res.data})\n    })\n  }\n}\nexport const reqGetAllDevOps = (devops) =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/alldevops\",\n      data:{devops:devops}\n    })\n    .then((res) => {\n      dispatch({type: GETDEVOPS, payload: res.data})\n    })\n  }\n}\nexport const reqGetAllDevelopers = (developer) =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/alldevelopers\",\n      data:{developer:developer}\n    })\n    .then((res) => {\n      dispatch({type: GETDEVELOPERS, payload: res.data})\n    })\n  }\n}\n//===========GetUsers==============================================\n\n//===========Tasks and Status of task==============================================\nexport const reqcreatetask = (obj) => {\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-create\",\n      data: {name_of_task: obj.nameTask, time_for_task: obj.timeTask, descripton_of_task: obj.textTask, project_task: obj.project_task, user_task: obj.user_task, status_task:obj.status_task }\n    })\n    .then(\n      dispatch(success_create()),\n      (err) => dispatch(err_create(err))\n   )\n  }\n}\nexport const reqreadtask = (readedTasks) => {\n  return (dispatch) => {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:8080/api/task-read\",\n       data: {tasks: readedTasks}\n      })\n      .then((res) => {\n        dispatch({type: READTASK, payload: res.data})\n      })\n  }\n}\nexport const reqreadplannedTaskF= (readplannedTask, readedTasks) =>{\n  return(dispatch)=>{\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-planned\",\n     data: {status: readplannedTask, name: readedTasks}\n    })\n    .then((res) => {dispatch({type:SET_PLANNED_TASK, payload: res.data})})\n  }\n}\n\nexport const reqreadInProgresTaskF= (readInProgresTask, readedTasks) =>{\n  return(dispatch)=>{\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-read-inprogress\",\n     data: {status: readInProgresTask, name: readedTasks}\n    })\n    .then((res) => {dispatch({type:SET_INPROGRESS_TASK, payload: res.data})})\n  }\n}\n\nexport const reqreadDoneTaskF= (readDoneTask, readedTasks) =>{\n  \n  return(dispatch)=>{\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-read-done\",\n     data: {status: readDoneTask, name: readedTasks}\n    })\n    .then((res) => {dispatch({type:SET_DONE_TASK, payload: res.data})})\n  }\n}\nexport const reqchangeStatus =  (id, changedStatus) =>{ \n  return(dispatch) => {\n    console.log('reqchange ==='+ id+'/'+ changedStatus)\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-change-status\",\n      data: {status: changedStatus, id: id}\n    })\n    .then(\n      dispatch(start_change()),\n      (err) => dispatch(stop_change(err))\n   )\n  }\n}\nexport const stopChange = () => {\n  return(dispatch) => {\n    dispatch(stop_change())\n  }\n}\nexport const deleteTask = (id) =>{\n  return (dispatch) => {\n    console.log(id)\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-delete-task\",\n      data: {id: id}\n    })\n    .then(\n      dispatch(deleted()),\n      (err) => dispatch(stop_deleting(err))\n   )\n  }\n}\n//===========Tasks and Status of task==============================================\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Auth.js",["100","101","102"],"import React, { useEffect, useState } from 'react'\nimport {Form, Row, Col, Button} from 'react-bootstrap'\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOGIN, SETEMAIL, SETNAME, SETPASSWORD, SETPROFFETION } from '../../Utils/redux/redux-types';\nimport { reqauth } from '../../Utils/redux/actions';\n\nimport '../../Styles/styleAuth.css'\nimport f11 from '../../Styles/img/f11.svg'\n\nconst mapDispatchToProps = {\n  reqauth,\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\nfunction Auth(){\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const state = useSelector((state) => state)\n\n  const [stateEmail, setEmail] = useState(\"\")\n  const [statePassword, setPassword] = useState(\"\")\n  const [stateName, setName] = useState(\"\")\n  const [stateProffetion, setProffetion] = useState(\"\")\n\n\n  const handleDispatch = _event => {\n    dispatch({type: SETEMAIL, payload: stateEmail})\n    dispatch({type: SETPASSWORD, payload: statePassword})\n    dispatch({type: SETNAME, payload: stateName})\n    dispatch({type: SETPROFFETION, payload: stateProffetion})\n  }\n  const email = useSelector((state) => state.setAuth.email)\n  const password = useSelector((state) => state.setAuth.password)\n  const name = useSelector((state) => state.setAuth.name)\n  const proffetion = useSelector((state) => state.setAuth.proffetion)\n\n  const obj = {email: email, password: password, name: name, proffetion: proffetion}\n\n\n  useEffect(() => {\n    if(state.reducer.success){\n      alert('Authorization was successful!!!');\n      dispatch({type: LOGIN, payload: true })\n      history.push('/startp')\n    }\n  })\n  const handleSub = _event => {\n    if(obj.email, obj.password, obj.name, obj.proffetion === ''){\n      alert('fild form');\n    }else{\n      dispatch(reqauth(obj))\n    }\n  }\n\n\n  return (\n    <div className = \"container123321\">\n      <div className = 'sub-container'>\n      \n      <Form.Group className=\"mb-3\"  as={Col} controlId=\"formGridEmail\"  onChange = {e => setEmail(e.target.value)}>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n      </Form.Group>\n      \n      <Form.Group className=\"mb-3\" as={Col} controlId=\"formGridPassword\" onChange = {e => setPassword(e.target.value)}>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\"  controlId=\"formGridAddress1\" onChange= {e => setName(e.target.value)}>\n        <Form.Label>Name</Form.Label>\n       <Form.Control type=\"name\" placeholder=\"Name\" />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\"  controlId=\"formGridAddress2\">\n        <Form.Label>Surname</Form.Label>\n        <Form.Control type=\"name\" placeholder=\"Surname\" />\n      </Form.Group>\n      \n      <Form.Group className=\"mb-3\" as={Col} controlId=\"formGridCity\">\n        <Form.Label>City</Form.Label>\n        <Form.Control type=\"city\" placeholder=\"City\"/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" as={Col} controlId=\"formGridCity\" onChange = {e => setProffetion(e.target.value)}>\n      <Form.Label>Proffetion</Form.Label>\n      <Form.Select >\n        <option >Choose Proffetion</option>\n        <option value=\"CEO\">CEO</option>\n        <option value=\"DevOps\">DevOps</option>\n        <option value=\"Developer\">Developer</option>\n      </Form.Select>\n      </Form.Group>\n\n      <Form.Group  className=\"mb-3\" id=\"formGridCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"I agree with the terms of use\" onChange = {handleDispatch}/>\n      </Form.Group>\n\n      <Button variant=\"primary\" onClick ={handleSub}>Sign up</Button>\n    \n     </div>\n    <div className = 'ee'><img src = {f11}/></div>\n  </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Login.js",["103","104","105"],"import React, { useEffect, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap/'\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { LOGIN, SETEMAIL, SETPASSWORD } from '../../Utils/redux/redux-types'\nimport { reqlogin } from '../../Utils/redux/actions';\nimport f8 from '../../Styles/img/f8.svg'\nimport '../../Styles/styleLogin.css'\n   \nconst mapDispatchToProps = {\n  reqlogin,\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\n\n function LogForm(){ \n  const dispatch = useDispatch()\n  const history = useHistory();\n  \n  const [stateEmail, setEmail] = useState(\"\")\n  const [statePassword, setPassword] = useState(\"\")\n\n  const state = useSelector((state) => state)\n  const email = useSelector((state) => state.setAuth.email)\n  const password = useSelector((state) => state.setAuth.password)\n  \n  const obj = {email: email, password: password}\n\n  const handleDispatch = _event => {\n  dispatch({type: SETEMAIL, payload: stateEmail})\n  dispatch({type: SETPASSWORD, payload: statePassword})\n}\n\n  useEffect(() => {\n    if(state.reducer.success){\n      dispatch({type: LOGIN, payload: true })\n      history.push('/startp') \n    }\n  }, [state.reducer.success])\n\n  const handlesub = _event => {\n    if(obj.email, obj.password === ''){\n      alert('fild form');\n    }else{\n    dispatch(reqlogin(obj))\n    }  \n  }\n\n  return(\n    <>\n        <Form>\n          <div className = 'container'>\n          <div className = \"pic\">\n            <img src = {f8}/> \n          </div>\n          \n            <div className = \"some\">\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" onChange = {e => setEmail(e.target.value)}>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n          </Form.Group>\n          \n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" onChange = {e => setPassword(e.target.value)}>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\"/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"I agree\"  onChange ={handleDispatch}/>\n          </Form.Group>\n\n          <Button variant=\"primary\" onClick={handlesub}>Sign in</Button>\n          </div>\n          </div>\n      </Form>\n    </>\n      )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogForm);\n\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/StartPage.js",["106","107","108","109","110","111","112","113"],"\nimport React from \"react\"\nimport {Button, ButtonGroup, Card, Col, Container, Row } from \"react-bootstrap\"\n\nimport '../../Styles/styleStartPage.css'\nimport f7 from '../../Styles/img/f7.svg'\nimport f8 from '../../Styles/img/f8.svg'\nimport f10 from '../../Styles/img/f10.jpg'\n\n\n\nexport default function StartPage(){\n  \n  return(\n \n      <div className = 'mainContainer'>\n        \n        <div className = \"introSection\">          \n          <div className = \"section1\">\n            \n            <div className= \"textgroup\">\n               <h1>Работайте в команде</h1>\n               <p>Управляйте проектами и выводите продуктивность на новый уровень собственным уникальным способом вместе с startUP! Factory.</p>\n            </div>\n\n            <div className = 'btngroup'>\n              <div className =\"signin\"><Button variant=\"outline-primary\" size = \"lg\">Enter</Button></div>\n              <div className =\"signup\"><Button variant=\"primary\" size = \"lg\">Get Account</Button></div>              \n            </div>\n          </div>\n\n          <img className = \"timeimg\" src = {f8}/>           \n        </div>\n\n        <div className = \"bodySection\">          \n          <div className='textb'>\n            <h2>Это не просто работа. Это координация действий в команде.</h2>\n            <p>Начните с досок, колонок и карточек, а затем переходите к более сложным функциям. Управляйте проектами, упорядочивайте задачи и поддерживайте командный дух — все это в startUP! Factory.</p>\n          </div>\n          <img className = \"track\" src = {f7}/>           \n        </div>\n\n        <div className = \"bodySection2\">\n          <div className = \"texty\">\n            <h2 className = \"ltext\">Функции для эффективной командной работы.</h2>\n            <p className = \"stext\">Продуктивность команды зависит от эффективных инструментов и комфортной рабочей обстановки. Интуитивно понятные функции Trello позволяют команде быстро настроить рабочие процессы для любых задач: от совещаний и проектов до мероприятий и постановки целей.</p>\n\n          </div>\n          <img className = \"time3\" src = {f10}/>           \n          {/* <div class=\"block-animation\"></div> */}\n        </div>\n\n\n\n      </div>\n \n\n  )\n}\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Tracker.js",["114","115","116","117","118"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport DisplayComponent from '../../Utils/DisplayComponent';\nimport BtnComponent from '../../Utils/BtnComponent';\nimport { SETNAMEOFPROJECT, SETTASKFORTRACKING } from '../../Utils/redux/redux-types';\nimport { reqreadtask, reqsetproject, reqsettimeproject } from '../../Utils/redux/actions';\n\n\n\nexport default function Tracker(){\n  const dispatch = useDispatch();\n\n  const [time, setTime] = useState({ms:0, s:0, m:0, h:0});\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  const [data_of_start, setDatastart] = useState(new Date());\n  //const list_of_projects = useSelector((state) => state.setProject.list_of_projects)\n  const name = useSelector((state) => state.setProject.name_of_project)\n\n  useEffect(() => {\n    dispatch(reqreadtask(name))\n  }, [])\n\n  \n  const list_of_tasks = useSelector((state) => state.setTask.readedTask)\n  const email = useSelector((state) => state.setAuth.email)\n\n  console.log('project === ' + name)\n  console.log('email === ' + email)\n  console.log('tasks === ' + list_of_tasks)\n\n\n  let updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n  const obj = {email: email}\n\n \n\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n    const start_time = new Date()\n    setDatastart(start_time) \n  };\n  const run = () => {\n    if(updatedM === 60){\n      updatedH++;\n      updatedM = 0;\n    }\n    if(updatedS === 60){\n      updatedM++;\n      updatedS = 0;\n    }\n    if(updatedMs === 100){\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ms:updatedMs, s:updatedS, m:updatedM, h:updatedH});\n  };\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n    const stop_time = new Date()\n    const work = stop_time - data_of_start\n    const work1 = work / 1000\n    const obj = {nameProject: name, workTime: work1}\n    dispatch(reqsettimeproject(obj))\n  };\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };  \n  const resume = () => start()\n\n  useEffect(() => {dispatch(reqsetproject(obj))}, [])\n\n  return (\n    <div>\n      <div className=\"main-section\">\n          <h4>Project: {name}</h4>\n        <div className=\"clock-holder\">\n\n          <div className=\"stopwatch\">\n            <DisplayComponent time={time}/>\n            <BtnComponent status={status} resume={resume} reset={reset} stop={stop} start={start}/>        \n          </div>         \n          <Form.Select defaultValue = 'Choose task' onChange = {e => dispatch({type: SETTASKFORTRACKING, payload: e.target.value})}>\n            <option disabled>Choose Task</option>\n            {list_of_tasks.map((item) =>(<option value = {item.name_task}>{item.name_task}</option>))}                        \n          </Form.Select> \n\n        </div>        \n      </div>\n    </div>\n  )\n}\n\n\n\n{/* <Form.Select defaultValue = 'Choose project' onChange = {e => dispatch({type: SETNAMEOFPROJECT, payload: e.target.value})}>\n            <option disabled>Choose project</option>\n            {list_of_projects.map((item) =>(<option value = {item.name_project}>{item.name_project}</option>))}                        \n          </Form.Select>  */}\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Project.js",["119","120","121","122","123","124","125","126","127","128","129","130","131"],"\nimport React, { useEffect, useState } from 'react'\nimport {Accordion, Button, ButtonGroup, Card, Dropdown, DropdownButton, Form, ListGroup, Modal, Nav} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { notcreate, reqcreateProject, reqDeleteProject, reqGetAllUsers, reqGetDescription, reqsetproject } from '../../Utils/redux/actions';\nimport {  SETDESCRIPTIONOFPROJECT, SETIDPRO, SETNAMEOFPROJECT } from '../../Utils/redux/redux-types';\nimport Chat from './Chat'\nimport '../../Styles/styleProject.css'\n\n\nexport default function Project(){  \n \n  const dispatch = useDispatch();\n  const history = useHistory()\n  const state = useSelector((state) => state)\n\n  const email = useSelector((state) => state.setAuth.email)\n  const projects = useSelector((state) => state.setProject.list_of_projects)\n  const name_of_project = useSelector((state) => state.setProject.name_of_project)\n  const description_project = useSelector((state) => state.setProject.descrip_project)\n  // const get_descrip_proj = useSelector((state) => state.setProject.get_descrip_proj)\n\n  const obj = {email: email}\n  const obj1 = {email: email, name_of_project: name_of_project, descrip: description_project}\n  console.log(projects)\n\n  useEffect(() => {\n    dispatch(reqsetproject(obj))\n    dispatch(reqGetAllUsers())\n    }, [state.reducer.deleted, state.reducer.created])\n\n  useEffect(() =>{\n    if(state.reducer.created || state.reducer.deleted){  \n      history.push('/project')\n      dispatch(notcreate())\n    }\n  })\n\n  const handle_view  = (name_project) => {    \n    dispatch({type: SETIDPRO, payload: name_project})\n    history.push('/vue_project')\n  }\n\n  const handleSubmit =  _event => {    \n    if (obj1.email, obj1.name_of_project === '', obj1.descrip === '') {\n     alert('Fild the Form!');\n    }\n    else{\n      dispatch(reqcreateProject(obj1))\n    }\n   }\n\n   const handleGoToTracker = (selectedProject)=> {\n    console.log(selectedProject)\n    dispatch({type: SETNAMEOFPROJECT, payload: selectedProject})\n    history.push('/tracker')\n   }\n\n   const handle_Delete_Project=(name_project)=>{\n     //DELETE PROJECT AND ALL TASKS OF PROJECT\n     console.log(name_project, email)     \n     alert(`Do you want delete project ${name_project} with all tasks?`)\n     dispatch(reqDeleteProject(name_project, email))\n   }\n   \n   const handle_project = () => {\n    history.push('/project')\n   }\n\n   const handle_users = () => {\n    history.push('/')\n  }\n\n  const handle_tracker = () => {\n    history.push('/tracker')\n  }\n  return(  \n    <div className = 'main-container111'> \n      <div className = 'v'>\n        <div className = 'form1'>\n\n        <Form.Group onChange = {e => dispatch({type:SETNAMEOFPROJECT, payload: e.target.value})}>\n            <Form.Floating>\n              <Form.Control id=\"floatingInputCustom\" type=\"text\" placeholder=\"name@example.com\"/>\n              <label htmlFor=\"floatingInputCustom\">Name Project</label>\n            </Form.Floating>\n          </Form.Group>\n          </div>\n          <div className ='form2'>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\" onChange = {e => dispatch({type:SETDESCRIPTIONOFPROJECT, payload: e.target.value})}>\n            <Form.Floating>\n              <Form.Control as=\"textarea\" id=\"floatingInputCustom\" type=\"text\" placeholder=\"name@example.com\"/>\n              <label htmlFor=\"floatingInputCustom\">Deskription Project</label>\n            </Form.Floating>\n          </Form.Group>\n        </div>\n\n          {/* <Button className ='btnGroup' variant=\"light\">Project</Button>\n          <Button className ='btnGroup' variant=\"light\">Users</Button>\n          <Button className ='btnGroup' variant=\"light\">Tracker</Button>\n          <DropdownButton  title=\"Dropdown\" id=\"bg-vertical-dropdown-2\">\n            <Dropdown.Item eventKey=\"1\">Settings</Dropdown.Item>\n          </DropdownButton> */}\n        \n        \n           <Button className = 'create-btn' onClick={handleSubmit}>Create!</Button>   \n      </div>\n\n        <div className = 'chat-list-container'>\n          <Chat />\n        </div>\n      \n        <div className = 'project-container'>\n          {projects.map((item, key) => (\n            <div className = 'item' key= {key}>\n              <Card bg = \"white\" >\n              <Card.Header><h3>{item.name_project}</h3></Card.Header>\n                <Card.Body>\n                  <Card.Text>Time of work on project: {item.current_time}</Card.Text>\n                  <div className = 'accord'>\n                  <Accordion defaultActiveKey=\"1\">\n                   <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Description</Accordion.Header>\n                      <Accordion.Body>\n                        {item.description_project}\n                      </Accordion.Body>\n                   </Accordion.Item>\n                  </Accordion>\n                  </div>\n                  <Button onClick = {() => handle_view(item.name_project)}>View Project</Button>\n                  <div className='bt' onClick ={()=> handle_Delete_Project(item.name_project)}><Button variant = 'danger'>Delete Project</Button></div>\n                  <div className='bt' onClick = {() => handleGoToTracker(item.name_project)} ><Button variant = 'success'>Track</Button></div>\n                </Card.Body>          \n              </Card>\n            </div>\n          ))}\n        </div>\n    </div>\n  )\n} \n\n\n\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Create.js",["132"],"\nimport React, { useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { SETNAMEOFPROJECT } from '../../Utils/redux/redux-types';\nimport { notcreate, reqcreateProject } from '../../Utils/redux/actions';\n\nconst mapDispatchToProps = {\n  reqcreateProject,\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\n function Create(){\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const state = useSelector((state) => state)\n\n  const email = useSelector((state) => state.setAuth.email)\n  const name_of_project = useSelector((state) => state.setProject.name_of_project)\n  const obj = {email: email, name_of_project: name_of_project}\n\n  useEffect(() => {\n    if(state.reducer.created){\n      alert('Created!!!');\n      history.push('/startp')\n      dispatch(notcreate())\n    }\n  })\n\n  const handleSubmit =  _event => {    \n   if (obj.email, obj.name_of_project === '') {\n    alert('Fild the Form!');\n   }\n   else{\n     dispatch(reqcreateProject(obj))\n   }\n  }\n  return (\n    <div>      \n      <div style ={{textAlign: 'center'}}>Create new project</div>\n         <div style = {{marginLeft: '600px', marginRight: '600px', marginTop: '100px' }}>\n             <Form.Group onChange = {e => dispatch({type:SETNAMEOFPROJECT, payload: e.target.value})}>\n                  <Form.Floating className=\"mb-3\">\n                    <Form.Control id=\"floatingInputCustom\" type=\"text\" placeholder=\"name@example.com\"/>\n                      <label htmlFor=\"floatingInputCustom\">Name</label>\n                  </Form.Floating>\n                <Button onClick={handleSubmit} style = {{background: '#272727'}}>Create</Button>\n              </Form.Group>\n          </div>\n      </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/VueProject.js",["133","134","135","136","137","138","139","140","141","142"],"import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, DropdownButton, Form, Modal, ModalBody, ModalDialog, ModalFooter, Tab, Tabs } from 'react-bootstrap'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { CREATETASK, SETNAMETASK, SETPROJECTFORTASK, SETSTATUS, SETTEXTTASK, SETTIMETASK, SETUSERTASK } from '../../../Utils/redux/redux-types'\n\n \nimport Developers from './Developers'\nimport Tasks from './Tasks'\nimport {reqcreatetask, reqGetAllUsers, reqreadDoneTaskF, reqreadInProgresTaskF, reqreadplannedTaskF, reqreadtask} from '../../../Utils/redux/actions'\n\nconst mapDispatchToProps = {\n  reqcreatetask\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\n\nfunction Vue_Project(){  \n    const history = useHistory()\n    const dispatch = useDispatch()\n    const state = useSelector((state) => state)\n\n    const [isDisable, setDis] = useState(true)\n    const [nameTask, setNameTask] = useState(\"\")\n    const [timeTask, setTimeTask] = useState(\"\")\n    const [textTask, setTextTask] = useState(\"\")\n\n    useEffect(()=>{\n      if(nameTask !== '')setDis(false)\n      else {setDis(true); }\n    },[nameTask])\n\n    const nameProject = useSelector((state) => state.setProject.list_of_projects)\n    const namepro = useSelector((state) => state.setTask.idforproj)\n\n    const nameTask1 = useSelector((state) => state.setTask.nameTask)\n    const timeTask1 = useSelector((state) => state.setTask.timeTask)\n    const textTask1 = useSelector((state) => state.setTask.textTask)\n    \n    const users = useSelector((state) => state.setTask.allUsers)\n    const selectednameproj = useSelector((state) => state.setTask.selectedProject)\n    const selectedusertask = useSelector((state) => state.setTask.selectedUser)\n    const statusTask = useSelector((state) => state.setTask.status)\n    const obj = {nameTask: nameTask1, timeTask: timeTask1, textTask: textTask1, project_task: selectednameproj, user_task: selectedusertask, status_task: statusTask}\n    \n    const status_obj = [{status: 'planned'}, {status: 'inprogress'}, {status: 'done'}]\n\n    const handleSub = _event => {\n      dispatch({type: SETNAMETASK, payload: nameTask})\n      dispatch({type: SETTIMETASK, payload: timeTask})\n      dispatch({type: SETTEXTTASK, payload: textTask})  \n    }\n    const handleDispatch = _event => {\n      if(obj.nameTask, obj.timeTask, obj.textTask === ''){\n        alert('fild form');\n      }else{\n        dispatch(reqcreatetask(obj))     \n        handleClose()\n        handle_bool()\n      }        \n    }\n\n    const handle_bool = _event => {\n      console.log('reeeeaaad')\n      alert('Created !')\n      \n      dispatch(reqreadtask(namepro))\n      return(<Tasks/>)\n      // history.push('/vue_project')\n    }\n    const [show, setShow] = useState(false)\n    const handleClose = _event => {\n      setShow(false)\n      setNameTask('')\n      setTextTask('')\n      setTimeTask('') \n    } \n    const handleShow = _event =>{\n      setShow(true)\n      dispatch(reqGetAllUsers())\n    } \n\n  return(\n  <div>\n    <div style = {{textAlign: 'center'}}>\n      <div className = 'editButton' style = {{display:'inline' }}><Button >Edit Task</Button></div>\n          <div className = 'createButton' style = {{display:'inline', padding: '10px'}}>          \n          \n          <Button onClick = {handleShow}>Create Task</Button>          \n          \n          <Modal show = {show} onHide = {handleClose} backdrop=\"static\"\n            keyboard={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create Task \n                  <Form.Group onChange = {e => setNameTask(e.target.value)}>\n                    <Form.Control type=\"text\" placeholder=\"New Task\"  />\n                  </Form.Group>\n                </Modal.Title>\n            </Modal.Header>\n\n            <ModalBody>\n              Task\n              <Form.Group onChange = {e => setTextTask(e.target.value)}>\n                <Form.Control type=\"text\" placeholder=\"Task\"/>\n                </Form.Group>\n              \n                Time for task\n                <Form.Group onChange = {e => setTimeTask(e.target.value)}>\n                <Form.Control type=\"text\" placeholder=\"Time\"/>\n                </Form.Group>\n              \n                Project\n                <Form.Select defaultValue = 'Choose Project' onChange = {e => dispatch({type: SETPROJECTFORTASK, payload: e.target.value})}>\n                  <option disabled>Choose Project</option>   \n                  {nameProject.map((item, key) => (\n                  <option value = {item.name_project} key={key}>{item.name_project}</option>\n                ))} </Form.Select>\n\n                Users\n                <Form.Select defaultValue = 'Choose User' onChange = {e => dispatch({type: SETUSERTASK, payload: e.target.value})}>\n                <option disabled>Choose User</option>\n                  {users.map((item, key) => (<option value ={item.name_user} key={key}>{item.name_user}</option>))}</Form.Select>\n                Status\n                <Form.Select defaultValue = 'Choose Status' onChange = {e => dispatch({type: SETSTATUS, payload: e.target.value})}>\n                <option disabled>Choose Status</option>\n                {status_obj.map((item, key) => (<option value ={item.status} key ={key}>{item.status}</option>))}\n                </Form.Select>\n\n              </ModalBody>\n\n            <ModalFooter>\n            <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleSub} >\n                Save \n              </Button>\n              <Button variant=\"primary\" disabled = {isDisable} onClick={handleDispatch} >\n                Confirm\n              </Button>\n            </ModalFooter>  \n          </Modal>\n        </div>\n        <div className = 'findButton' style = {{display:'inline'}}><Button>Find Task</Button></div>\n\n      </div>\n      <div style = {{marginLeft:\"300px\", marginRight:\"300px\"}}> \n        <Tabs style = {{textAlign: 'center'}} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n          \n          <Tab eventKey=\"home\" title=\"Tasks\" >\n          <Tasks/>\n          </Tab>\n\n          <Tab eventKey=\"profile\" title=\"Developers\">\n              <Developers/>\n          </Tab>\n      \n          \n        </Tabs>\n      </div>\n    </div>\n    \n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Vue_Project);","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Header/NavBar.js",["143","144","145","146","147","148"],"import React, { useState } from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Nav, Navbar, Container, NavDropdown, Dropdown, Row, Col, Stack} from 'react-bootstrap/'\n\nimport \"../../Styles/styleHeader.css\"\n\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\n\nexport default function NavBar(){\n  const history = useHistory();\n  const email = useSelector((state) => state.setAuth.email)\n  let auth = useSelector((state) => state.enter.isAuth)\n  const handle_logout =() =>{\n    localStorage.setItem('token', null)\n    window.location.replace(\"/\")\n  }\n\n  return(\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Container>\n        <Navbar.Brand onClick={() => history.push('/startp')}>startUP! Factory</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                   {auth ? (\n                     <>                     \n                     <Nav className=\"me-auto\">\n                      <Nav.Link onClick={() => history.push('/project')}>Projects</Nav.Link>                                                            \n                    </Nav>\n\n                    <Nav>\n                    <Nav.Link onClick={() => history.push('/project')}>{email}</Nav.Link>\n                    <Nav.Link onClick={() => handle_logout()}>Logout</Nav.Link>\n                    </Nav>  \n                    </>                    \n                   ):(\n                    <div className = 'sign'>\n                    <Nav>\n                    <Nav.Link onClick ={()=> history.push('/login')}>Sign in</Nav.Link>\n                    <Nav.Link onClick ={()=> history.push('/auth')}>Sign up</Nav.Link>\n\n                    \n                    </Nav>\n                    </div>                    \n                   )}                                      \n            </Navbar.Collapse>      \n          </Container>          \n        </Navbar>      \n  ) \n}\n\n            \n                  \n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/redux/redux-types.js",[],"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/DisplayComponent.js",[],"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Utils/BtnComponent.js",[],"/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/Chat.js",["149","150","151"],"import React, { useEffect } from 'react';\nimport { Badge, ListGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqGetAllUsers } from '../../Utils/redux/actions';\n\nconst Chat = () => {\n  \n  //const users = useSelector((state) => state.setTask.allUsers);\n  const users = useSelector((state) => state.setTask.allUsers)\n\n  return (\n    <div> \n      <ListGroup as=\"ol\" numbered>\n      {users.map((item)=>(  \n          <ListGroup.Item className=\"d-flex justify-content-between align-items-start\">\n            <div className=\"ms-2 me-auto\">\n              <div className=\"fw-bold\">CEO</div>\n              {item.name_user}\n            </div>\n            <Badge variant=\"primary\" pill>\n              14\n            </Badge>\n          </ListGroup.Item>  \n        ))}        \n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/Developers.js",["152","153","154","155"],"import { Tab } from 'bootstrap'\nimport React, { useEffect } from 'react'\nimport { Card, Table, Tabs } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../../../Styles/styleDevelopers.css'\nimport { reqGetAllCEO, reqGetAllDevelopers, reqGetAllDevOps } from '../../../Utils/redux/actions'\n//J$eaT2msVUX!7-)\n\nexport default function Developers(){\n\n  const dispatch = useDispatch()\n  const ceo = 'CEO'\n  const devops = 'DevOps'\n  const developer = 'Developer'\n\n  useEffect(() => {\n    dispatch(reqGetAllCEO(ceo))\n  }, [])\n  useEffect(() => {\n    dispatch( reqGetAllDevOps(devops))\n  }, [])\n  useEffect(() => {\n    dispatch(reqGetAllDevelopers(developer))\n  }, [])\n  \n\n  const users = useSelector((state) => state.setTask.allUsers)\n  const ceoUsers = useSelector((state) => state.setAuth.ceo)\n  const devopsUsers = useSelector((state) => state.setAuth.devops)\n  const developerUsers = useSelector((state) => state.setAuth.developer)\n\n  console.log(ceoUsers)\n  // devopsUsers, developerUsers\n\n  return(\n\n    <div>\n     <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n        <Tab eventKey=\"home\" title=\"All\">\n        {users.map((item) => (\n        <Card className ='some123123'>\n          <Card.Header>\n            <Card.Title>{item.name_user}</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <div style ={{display: 'inline-flex'}}>\n            I am: {item.proffetion}\n            </div>\n            <div>\n            My stack: {item.developers_stack}\n            </div>\n            <div>\n            My sallary: {item.sallary}$/hr\n            </div>\n            <div>\n            My current project: {item.current_project}\n            </div>\n          </Card.Body>\n         \n          <Card.Footer>\n            Get contackt with me: {item.email_user}\n          </Card.Footer>\n        </Card>\n         ))}\n      </Tab>\n\n     \n      <Tab eventKey=\"home1\" title=\"Developers\">\n      {developerUsers.map((item) => (\n        <Card className ='some123123'>\n          <Card.Header>\n            <Card.Title>{item.name_user}</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <div style ={{display: 'inline-flex'}}>\n            I am: {item.proffetion}\n            </div>\n            <div>\n            My stack: {item.developers_stack}\n            </div>\n            <div>\n            My sallary: {item.sallary}$/hr\n            </div>\n            <div>\n            My current project: {item.current_project}\n            </div>\n          </Card.Body>\n         \n          <Card.Footer>\n            Get contackt with me: {item.email_user}\n          </Card.Footer>\n        </Card>\n         ))}\n      </Tab>\n      <Tab eventKey=\"profile2\" title=\"Dev-Ops\">\n      {devopsUsers.map((item) => (\n        <Card className ='some123123'>\n          <Card.Header>\n            <Card.Title>{item.name_user}</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <div style ={{display: 'inline-flex'}}>\n            I am: {item.proffetion}\n            </div>\n            <div>\n            My stack: {item.developers_stack}\n            </div>\n            <div>\n            My sallary: {item.sallary}$/hr\n            </div>\n            <div>\n            My current project: {item.current_project}\n            </div>\n          </Card.Body>\n         \n          <Card.Footer>\n            Get contackt with me: {item.email_user}\n          </Card.Footer>\n        </Card>\n         ))}\n      </Tab>\n      <Tab eventKey=\"contact1\" title=\"CEO\">\n      {ceoUsers.map((item) => (\n        <Card className ='some123123'>\n          <Card.Header>\n            <Card.Title>{item.name_user}</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <div style ={{display: 'inline-flex'}}>\n            I am: {item.proffetion}\n            </div>\n            <div>\n            My stack: {item.developers_stack}\n            </div>\n            <div>\n            My sallary: {item.sallary}$/hr\n            </div>\n            <div>\n            My current project: {item.current_project}\n            </div>\n          </Card.Body>\n         \n          <Card.Footer>\n            Get contackt with me: {item.email_user}\n          </Card.Footer>\n        </Card>\n         ))}\n      </Tab>\n    </Tabs>\n    </div>\n  )\n}","/home/developer/Documents/Projects_DEV/Project_Management/Tracker_Front/src/Component/Main/vueProject/Tasks.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"\nimport React, { useEffect, useState } from 'react'\nimport { Accordion, Button, Card, Dropdown, Tab, Table, Tabs, ProgressBar } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { reqreadplannedTaskF, reqreadtask,reqreadInProgresTaskF, reqreadDoneTaskF, reqchangeStatus, stopChange, deleteTask, stop_deleting } from '../../../Utils/redux/actions'\nimport '../../../Styles/styleTasks.css'\nimport { useHistory } from 'react-router'\n\nexport default function Tasks(){\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const readedTasks = useSelector((state) => state.setTask.idforproj)\n  const readplannedTask = 'planned'\n  const readInProgresTask = 'inprogress'\n  const readDoneTask = 'done'\n  \n  const [status, setStatus] = useState(false)\n\n\n  useEffect(() => {dispatch(reqreadtask(readedTasks))}, [readedTasks])\n  useEffect(() => {dispatch(reqreadplannedTaskF(readplannedTask, readedTasks))}, [])\n  useEffect(() => {dispatch(reqreadInProgresTaskF(readInProgresTask, readedTasks))}, [])\n  useEffect(() => {dispatch(reqreadDoneTaskF(readDoneTask, readedTasks))}, [])\n  const state = useSelector((state) => state)\n\n  const readed_tasks = useSelector((state) => state.setTask.readedTask)\n  const readed_planned_tasks = useSelector((state) => state.setTask.planned)\n  const readed_inprogress_tasks = useSelector((state) => state.setTask.inprogress)\n  const readed_done_tasks = useSelector((state) => state.setTask.done)  \n\n\n\n  \n\n  useEffect(() => {\n    if(state.reducer.deleted == true){dispatch(reqreadtask(readedTasks))}\n    // dispatch(stop_deleting())\n    // return(<Tasks/>)\n    history.push('/vue_project')\n  }, [state.reducer.deleted])\n\n  useEffect(() => {\n    if(state.reducer.deleted == true){dispatch(reqreadplannedTaskF(readplannedTask, readedTasks))}\n    // dispatch(stop_deleting())\n    // return(<Tasks/>)\n    history.push('/vue_project')\n  }, [state.reducer.deleted])\n\n\n  useEffect(() => {\n    if(state.reducer.deleted == true){dispatch(reqreadInProgresTaskF(readInProgresTask, readedTasks))}\n    // dispatch(stop_deleting())\n    // return(<Tasks/>)\n    history.push('/vue_project')\n  }, [state.reducer.deleted])\n\n  useEffect(() => {\n    if(state.reducer.deleted == true){dispatch(reqreadDoneTaskF(readDoneTask, readedTasks))}\n    \n    // return(<Tasks/>)\n    history.push('/vue_project')\n    dispatch(stop_deleting())\n  }, [state.reducer.deleted])\n\n\n\n\n  useEffect(() =>{\n    console.log('state = '+ state.reducer.change)\n    if(state.reducer.change == true){  \n      dispatch(\n        reqreadplannedTaskF(readplannedTask, readedTasks)     \n      ) \n      // history.push('/vue_project')\n      dispatch(stopChange())\n      return(<Tasks/>)\n    }\n  }, [state.reducer.change])\n\n  useEffect(() =>{\n    if(state.reducer.change == true){  \n      dispatch(\n        reqreadInProgresTaskF(readInProgresTask, readedTasks)\n      ) \n      // history.push('/vue_project')\n      dispatch(stopChange())\n      return(<Tasks/>)\n    }\n  }, [state.reducer.change])\n\n  useEffect(() =>{\n    if(state.reducer.change == true){  \n      dispatch(reqreadDoneTaskF(readDoneTask, readedTasks)) \n      // history.push('/vue_project')\n      dispatch(stopChange())\n      return(<Tasks/>)\n    }\n  }, [state.reducer.change])\n\n\n  const handle_Planned = (id) => {\n    dispatch(reqchangeStatus(id, readplannedTask))\n  }\n\n  const handle_Done =(id)=>{\n    dispatch(reqchangeStatus(id, readDoneTask))\n  }\n  \n  const handle_InProress =(id)=>{\n    dispatch(reqchangeStatus(id, readInProgresTask))\n  }\n  \n  const handle_Delete = (id) => {\n    dispatch(deleteTask(id))\n  }\n\n  return(\n    <div className ='container111'>\n      <Tabs style = {{textAlign: 'center'}} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"tab1\" transition = {true}>\n         <Tab eventKey=\"home\" title=\"Planned\" className = 'tab11'>\n            {readed_planned_tasks.map((item) => (\n              <Card className = 'tab-plan'>\n              <Card.Body>\n                <Card.Title>{item.name_task}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\"><h5>Time:</h5> {item.planned_time_task}</Card.Subtitle>\n                <Card.Text>\n                <Accordion defaultActiveKey=\"0\">\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Description</Accordion.Header>\n                    <Accordion.Body>\n                      {item.description_task}\n                    </Accordion.Body>\n                  </Accordion.Item>  \n                </Accordion>\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer className = 'footer'>\n\n              <Dropdown className = 'btn'>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  ...\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {/* <Dropdown.Item><Button onClick = {() => handle_Planned(item.id)}>Planned</Button></Dropdown.Item> */}\n                  <Dropdown.Item><Button onClick = {() => handle_Done(item.id)}>Done</Button></Dropdown.Item>                  \n                  <Dropdown.Item><Button onClick = {() => handle_InProress(item.id)}>In proress</Button></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item><Button onClick = {() => handle_Delete(item.id)}>Delete</Button></Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>              \n              <ProgressBar now ={50} className = 'pro'/>              \n              </Card.Footer>\n            </Card>\n            ))}\n          </Tab>\n          \n          <Tab eventKey=\"profile\" title=\"Done\">\n              {readed_done_tasks.map((item) => (\n                <Card className = 'tab-plan'>\n                <Card.Body>\n                  <Card.Title>{item.name_task}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\"><h5>Time:</h5> {item.planned_time_task}</Card.Subtitle>\n                  <Card.Text>\n                  <Accordion defaultActiveKey=\"0\">\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>Description</Accordion.Header>\n                      <Accordion.Body>\n                        {item.description_task}\n                      </Accordion.Body>\n                    </Accordion.Item>  \n                  </Accordion>\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className = 'footer'>\n\n              <Dropdown className = 'btn'>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  ...\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item><Button onClick = {() => handle_Planned(item.id)}>Planned</Button></Dropdown.Item>\n                  {/* <Dropdown.Item><Button onClick = {() => handle_Done(item.id)}>Done</Button></Dropdown.Item>                   */}\n                  <Dropdown.Item><Button onClick = {() => handle_InProress(item.id)}>In proress</Button></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item><Button onClick = {() => handle_Delete(item.id)}>Delete</Button></Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <ProgressBar now ={30} className = 'pro'/>\n              </Card.Footer>\n              </Card>\n              ))}\n          </Tab>\n\n          <Tab eventKey=\"profile1\" title=\"In Progress\">\n              {readed_inprogress_tasks.map((item) => (\n                <Card className = 'tab-plan'>\n                <Card.Body>\n                  <Card.Title>{item.name_task}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\"><h5>Time:</h5> {item.planned_time_task}</Card.Subtitle>\n                  <Card.Text>\n                  <Accordion defaultActiveKey=\"0\">\n                    <Accordion.Item eventKey=\"1\">\n                      <Accordion.Header>Description</Accordion.Header>\n                      <Accordion.Body>\n                        {item.description_task}\n                      </Accordion.Body>\n                    </Accordion.Item>  \n                  </Accordion>\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className = 'footer'>\n\n                <Dropdown className = 'btn'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    ...\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                  <Dropdown.Item><Button onClick = {() => handle_Planned(item.id)}>Planned</Button></Dropdown.Item>\n                  <Dropdown.Item><Button onClick = {() => handle_Done(item.id)}>Done</Button></Dropdown.Item>                  \n                  {/* <Dropdown.Item><Button onClick = {() => handle_InProress(item.id)}>In proress</Button></Dropdown.Item> */}\n                  <Dropdown.Divider />\n                  <Dropdown.Item><Button onClick = {() => handle_Delete(item.id)}>Delete</Button></Dropdown.Item>\n                </Dropdown.Menu>\n                </Dropdown>\n                <ProgressBar now ={90} className = 'pro'/>\n\n                </Card.Footer>\n              </Card>\n              ))}\n          </Tab>\n      \n          <Tab eventKey=\"contact\" title=\"All Tasks\">\n              {readed_tasks.map((item) =>(\n              <Card className = 'tab-plan'>\n              <Card.Body>\n                <Card.Title>{item.name_task}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\"><h5>Time:</h5> {item.planned_time_task}</Card.Subtitle>\n                <Card.Text>\n                <Accordion defaultActiveKey=\"0\">\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Description</Accordion.Header>\n                    <Accordion.Body>\n                      {item.description_task}\n                    </Accordion.Body>\n                  </Accordion.Item>  \n                </Accordion>\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer className = 'footer'>\n\n                <Dropdown className = 'btn'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    ...\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                  <Dropdown.Item><Button onClick = {() => handle_Planned(item.id)}>Planned</Button></Dropdown.Item>\n                  <Dropdown.Item><Button onClick = {() => handle_Done(item.id)}>Done</Button></Dropdown.Item>                  \n                  <Dropdown.Item><Button onClick = {() => handle_InProress(item.id)}>In proress</Button></Dropdown.Item>\n                  <Dropdown.Divider/>\n                  <Dropdown.Item><Button onClick = {() => handle_Delete(item.id)}>Delete</Button></Dropdown.Item>\n                </Dropdown.Menu>\n                </Dropdown>\n                <ProgressBar now ={100} className = 'pro'/>\n              </Card.Footer>\n            </Card>\n\n          ))}\n          </Tab>\n          \n      </Tabs>\n    </div>\n  )\n}\n  \n\n\n  \n\n\n//{item.id}\n//{item.name_task}\n//{item.description_task}\n//{item.project_task}\n//{item.planned_time_task}\n//{item.user_task}\n \n\n ",{"ruleId":"177","severity":1,"message":"178","line":6,"column":23,"nodeType":"179","messageId":"180","endLine":6,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":26,"column":6,"nodeType":"183","endLine":26,"endColumn":8,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"185","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":20},{"ruleId":"177","severity":1,"message":"186","line":1,"column":359,"nodeType":"179","messageId":"180","endLine":1,"endColumn":382},{"ruleId":"177","severity":1,"message":"186","line":2,"column":18,"nodeType":"179","messageId":"180","endLine":2,"endColumn":41},{"ruleId":"177","severity":1,"message":"187","line":2,"column":115,"nodeType":"179","messageId":"180","endLine":2,"endColumn":126},{"ruleId":"188","severity":1,"message":"189","line":43,"column":5,"nodeType":"190","messageId":"191","endLine":47,"endColumn":12,"fix":"192"},{"ruleId":"177","severity":1,"message":"193","line":2,"column":15,"nodeType":"179","messageId":"180","endLine":2,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":53,"column":17,"nodeType":"196","messageId":"197","endLine":53,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":107,"column":27,"nodeType":"200","endLine":107,"endColumn":45},{"ruleId":"181","severity":1,"message":"201","line":42,"column":6,"nodeType":"183","endLine":42,"endColumn":29,"suggestions":"202"},{"ruleId":"194","severity":1,"message":"195","line":45,"column":17,"nodeType":"196","messageId":"197","endLine":45,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":57,"column":13,"nodeType":"200","endLine":57,"endColumn":30},{"ruleId":"177","severity":1,"message":"203","line":3,"column":17,"nodeType":"179","messageId":"180","endLine":3,"endColumn":28},{"ruleId":"177","severity":1,"message":"204","line":3,"column":30,"nodeType":"179","messageId":"180","endLine":3,"endColumn":34},{"ruleId":"177","severity":1,"message":"205","line":3,"column":36,"nodeType":"179","messageId":"180","endLine":3,"endColumn":39},{"ruleId":"177","severity":1,"message":"206","line":3,"column":41,"nodeType":"179","messageId":"180","endLine":3,"endColumn":50},{"ruleId":"177","severity":1,"message":"193","line":3,"column":52,"nodeType":"179","messageId":"180","endLine":3,"endColumn":55},{"ruleId":"198","severity":1,"message":"199","line":32,"column":11,"nodeType":"200","endLine":32,"endColumn":50},{"ruleId":"198","severity":1,"message":"199","line":40,"column":11,"nodeType":"200","endLine":40,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":49,"column":11,"nodeType":"200","endLine":49,"endColumn":49},{"ruleId":"177","severity":1,"message":"207","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"208","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":26},{"ruleId":"181","severity":1,"message":"209","line":24,"column":6,"nodeType":"183","endLine":24,"endColumn":8,"suggestions":"210"},{"ruleId":"181","severity":1,"message":"211","line":80,"column":51,"nodeType":"183","endLine":80,"endColumn":53,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":105,"column":1,"nodeType":"215","messageId":"216","endLine":108,"endColumn":30},{"ruleId":"177","severity":1,"message":"217","line":2,"column":28,"nodeType":"179","messageId":"180","endLine":2,"endColumn":36},{"ruleId":"177","severity":1,"message":"203","line":3,"column":28,"nodeType":"179","messageId":"180","endLine":3,"endColumn":39},{"ruleId":"177","severity":1,"message":"218","line":3,"column":47,"nodeType":"179","messageId":"180","endLine":3,"endColumn":55},{"ruleId":"177","severity":1,"message":"219","line":3,"column":57,"nodeType":"179","messageId":"180","endLine":3,"endColumn":71},{"ruleId":"177","severity":1,"message":"220","line":3,"column":79,"nodeType":"179","messageId":"180","endLine":3,"endColumn":88},{"ruleId":"177","severity":1,"message":"221","line":3,"column":90,"nodeType":"179","messageId":"180","endLine":3,"endColumn":95},{"ruleId":"177","severity":1,"message":"222","line":3,"column":97,"nodeType":"179","messageId":"180","endLine":3,"endColumn":100},{"ruleId":"177","severity":1,"message":"223","line":6,"column":73,"nodeType":"179","messageId":"180","endLine":6,"endColumn":90},{"ruleId":"181","severity":1,"message":"211","line":31,"column":8,"nodeType":"183","endLine":31,"endColumn":54,"suggestions":"224"},{"ruleId":"194","severity":1,"message":"195","line":46,"column":19,"nodeType":"196","messageId":"197","endLine":46,"endColumn":20},{"ruleId":"177","severity":1,"message":"225","line":67,"column":10,"nodeType":"179","messageId":"180","endLine":67,"endColumn":24},{"ruleId":"177","severity":1,"message":"226","line":71,"column":10,"nodeType":"179","messageId":"180","endLine":71,"endColumn":22},{"ruleId":"177","severity":1,"message":"227","line":75,"column":9,"nodeType":"179","messageId":"180","endLine":75,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":35,"column":17,"nodeType":"196","messageId":"197","endLine":35,"endColumn":18},{"ruleId":"177","severity":1,"message":"218","line":2,"column":18,"nodeType":"179","messageId":"180","endLine":2,"endColumn":26},{"ruleId":"177","severity":1,"message":"219","line":2,"column":28,"nodeType":"179","messageId":"180","endLine":2,"endColumn":42},{"ruleId":"177","severity":1,"message":"228","line":2,"column":68,"nodeType":"179","messageId":"180","endLine":2,"endColumn":79},{"ruleId":"177","severity":1,"message":"185","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"229","line":10,"column":40,"nodeType":"179","messageId":"180","endLine":10,"endColumn":56},{"ruleId":"177","severity":1,"message":"230","line":10,"column":58,"nodeType":"179","messageId":"180","endLine":10,"endColumn":79},{"ruleId":"177","severity":1,"message":"231","line":10,"column":81,"nodeType":"179","messageId":"180","endLine":10,"endColumn":100},{"ruleId":"177","severity":1,"message":"232","line":22,"column":11,"nodeType":"179","messageId":"180","endLine":22,"endColumn":18},{"ruleId":"177","severity":1,"message":"233","line":24,"column":11,"nodeType":"179","messageId":"180","endLine":24,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":57,"column":22,"nodeType":"196","messageId":"197","endLine":57,"endColumn":23},{"ruleId":"177","severity":1,"message":"217","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"234","line":3,"column":33,"nodeType":"179","messageId":"180","endLine":3,"endColumn":44},{"ruleId":"177","severity":1,"message":"218","line":3,"column":46,"nodeType":"179","messageId":"180","endLine":3,"endColumn":54},{"ruleId":"177","severity":1,"message":"193","line":3,"column":56,"nodeType":"179","messageId":"180","endLine":3,"endColumn":59},{"ruleId":"177","severity":1,"message":"205","line":3,"column":61,"nodeType":"179","messageId":"180","endLine":3,"endColumn":64},{"ruleId":"177","severity":1,"message":"235","line":3,"column":66,"nodeType":"179","messageId":"180","endLine":3,"endColumn":71},{"ruleId":"177","severity":1,"message":"236","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"237","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":21},{"ruleId":"177","severity":1,"message":"238","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":24},{"ruleId":"177","severity":1,"message":"239","line":3,"column":16,"nodeType":"179","messageId":"180","endLine":3,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":18,"column":6,"nodeType":"183","endLine":18,"endColumn":8,"suggestions":"240"},{"ruleId":"181","severity":1,"message":"182","line":21,"column":6,"nodeType":"183","endLine":21,"endColumn":8,"suggestions":"241"},{"ruleId":"181","severity":1,"message":"182","line":24,"column":6,"nodeType":"183","endLine":24,"endColumn":8,"suggestions":"242"},{"ruleId":"177","severity":1,"message":"239","line":3,"column":50,"nodeType":"179","messageId":"180","endLine":3,"endColumn":55},{"ruleId":"177","severity":1,"message":"243","line":17,"column":10,"nodeType":"179","messageId":"180","endLine":17,"endColumn":16},{"ruleId":"177","severity":1,"message":"244","line":17,"column":18,"nodeType":"179","messageId":"180","endLine":17,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":20,"column":57,"nodeType":"183","endLine":20,"endColumn":70,"suggestions":"245"},{"ruleId":"181","severity":1,"message":"246","line":21,"column":82,"nodeType":"183","endLine":21,"endColumn":84,"suggestions":"247"},{"ruleId":"181","severity":1,"message":"246","line":22,"column":86,"nodeType":"183","endLine":22,"endColumn":88,"suggestions":"248"},{"ruleId":"181","severity":1,"message":"246","line":23,"column":76,"nodeType":"183","endLine":23,"endColumn":78,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":36,"column":30,"nodeType":"252","messageId":"253","endLine":36,"endColumn":32},{"ruleId":"181","severity":1,"message":"254","line":40,"column":6,"nodeType":"183","endLine":40,"endColumn":29,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"251","line":43,"column":30,"nodeType":"252","messageId":"253","endLine":43,"endColumn":32},{"ruleId":"181","severity":1,"message":"254","line":47,"column":6,"nodeType":"183","endLine":47,"endColumn":29,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"251","line":51,"column":30,"nodeType":"252","messageId":"253","endLine":51,"endColumn":32},{"ruleId":"181","severity":1,"message":"254","line":55,"column":6,"nodeType":"183","endLine":55,"endColumn":29,"suggestions":"257"},{"ruleId":"250","severity":1,"message":"251","line":58,"column":30,"nodeType":"252","messageId":"253","endLine":58,"endColumn":32},{"ruleId":"181","severity":1,"message":"254","line":63,"column":6,"nodeType":"183","endLine":63,"endColumn":29,"suggestions":"258"},{"ruleId":"250","severity":1,"message":"251","line":70,"column":29,"nodeType":"252","messageId":"253","endLine":70,"endColumn":31},{"ruleId":"181","severity":1,"message":"246","line":78,"column":6,"nodeType":"183","endLine":78,"endColumn":28,"suggestions":"259"},{"ruleId":"250","severity":1,"message":"251","line":81,"column":29,"nodeType":"252","messageId":"253","endLine":81,"endColumn":31},{"ruleId":"181","severity":1,"message":"246","line":89,"column":6,"nodeType":"183","endLine":89,"endColumn":28,"suggestions":"260"},{"ruleId":"250","severity":1,"message":"251","line":92,"column":29,"nodeType":"252","messageId":"253","endLine":92,"endColumn":31},{"ruleId":"181","severity":1,"message":"246","line":98,"column":6,"nodeType":"183","endLine":98,"endColumn":28,"suggestions":"261"},"no-unused-vars","'setemail' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["262"],"'CREATETASK' is defined but never used.","'GETDESCRIPTIONOFPROJECT' is defined but never used.","'SETNAMETASK' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"263","text":"264"},"'Row' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["265"],"'ButtonGroup' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'axios' is defined but never used.","'SETNAMEOFPROJECT' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'name'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'dispatch' and 'obj'. Either include them or remove the dependency array.",["267"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'ListGroup' is defined but never used.","'Modal' is defined but never used.","'Nav' is defined but never used.","'reqGetDescription' is defined but never used.",["268"],"'handle_project' is assigned a value but never used.","'handle_users' is assigned a value but never used.","'handle_tracker' is assigned a value but never used.","'ModalDialog' is defined but never used.","'reqreadDoneTaskF' is defined but never used.","'reqreadInProgresTaskF' is defined but never used.","'reqreadplannedTaskF' is defined but never used.","'history' is assigned a value but never used.","'state' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Stack' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'reqGetAllUsers' is defined but never used.","'Table' is defined but never used.",["269"],["270"],["271"],"'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.",["272"],"React Hook useEffect has missing dependencies: 'dispatch' and 'readedTasks'. Either include them or remove the dependency array.",["273"],["274"],["275"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'readedTasks'. Either include them or remove the dependency array.",["276"],["277"],["278"],["279"],["280"],["281"],["282"],{"desc":"283","fix":"284"},[1094,1096],".",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"283","fix":"293"},{"desc":"283","fix":"294"},{"desc":"283","fix":"295"},{"desc":"296","fix":"297"},{"desc":"296","fix":"298"},{"desc":"296","fix":"299"},{"desc":"296","fix":"300"},{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"301","fix":"304"},{"desc":"301","fix":"305"},{"desc":"306","fix":"307"},{"desc":"306","fix":"308"},{"desc":"306","fix":"309"},"Update the dependencies array to be: [dispatch]",{"range":"310","text":"311"},"Update the dependencies array to be: [dispatch, history, state.reducer.success]",{"range":"312","text":"313"},"Update the dependencies array to be: [dispatch, name]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch, obj]",{"range":"316","text":"317"},"Update the dependencies array to be: [state.reducer.deleted, state.reducer.created, dispatch, obj]",{"range":"318","text":"319"},{"range":"320","text":"311"},{"range":"321","text":"311"},{"range":"322","text":"311"},"Update the dependencies array to be: [dispatch, readedTasks]",{"range":"323","text":"324"},{"range":"325","text":"324"},{"range":"326","text":"324"},{"range":"327","text":"324"},"Update the dependencies array to be: [dispatch, history, readedTasks, state.reducer.deleted]",{"range":"328","text":"329"},{"range":"330","text":"329"},{"range":"331","text":"329"},{"range":"332","text":"329"},"Update the dependencies array to be: [dispatch, readedTasks, state.reducer.change]",{"range":"333","text":"334"},{"range":"335","text":"334"},{"range":"336","text":"334"},[896,898],"[dispatch]",[1250,1273],"[dispatch, history, state.reducer.success]",[960,962],"[dispatch, name]",[2286,2288],"[dispatch, obj]",[1371,1417],"[state.reducer.deleted, state.reducer.created, dispatch, obj]",[550,552],[618,620],[692,694],[846,859],"[dispatch, readedTasks]",[942,944],[1031,1033],[1110,1112],[1662,1685],"[dispatch, history, readedTasks, state.reducer.deleted]",[1902,1925],[2147,2170],[2383,2406],[2710,2732],"[dispatch, readedTasks, state.reducer.change]",[2982,3004],[3228,3250]]