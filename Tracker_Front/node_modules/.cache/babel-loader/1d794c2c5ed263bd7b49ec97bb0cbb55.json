{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap/';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { LOGIN, SETEMAIL, SETPASSWORD } from '../../Utils/redux/redux-types';\nimport { reqlogin } from '../../Utils/redux/actions';\nimport NavBar from '../Header/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapDispatchToProps = {\n  reqlogin\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.reducer.success\n  };\n};\n\nfunction LogForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [stateEmail, setEmail] = useState(\"\");\n  const [statePassword, setPassword] = useState(\"\");\n  const state = useSelector(state => state);\n  const email = useSelector(state => state.setAuth.email);\n  const password = useSelector(state => state.setAuth.password);\n  const obj = {\n    email: email,\n    password: password\n  };\n\n  const handleDispatch = _event => {\n    dispatch({\n      type: SETEMAIL,\n      payload: stateEmail\n    });\n    dispatch({\n      type: SETPASSWORD,\n      payload: statePassword\n    });\n  };\n\n  useEffect(() => {\n    if (state.reducer.success) {\n      dispatch({\n        type: LOGIN,\n        payload: true\n      });\n      history.push('/startp');\n    }\n  }, [state.reducer.success]);\n\n  const handlesub = _event => {\n    if (obj.email, obj.password === '') {\n      alert('fild form');\n    } else {\n      dispatch(reqlogin(obj));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        marginLeft: '700px',\n        marginRight: '700px',\n        marginTop: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        onChange: e => setEmail(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        onChange: e => setPassword(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"I agree\",\n          onChange: handleDispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handlesub,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogForm, \"KFzVJqq1Az/L86WKyfgvUEZh8a8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector];\n});\n\n_c = LogForm;\nexport default connect(mapStateToProps, mapDispatchToProps)(LogForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogForm\");","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Login.js"],"names":["React","useEffect","useState","Form","Button","connect","useDispatch","useSelector","useHistory","LOGIN","SETEMAIL","SETPASSWORD","reqlogin","NavBar","mapDispatchToProps","mapStateToProps","state","store","reducer","success","LogForm","dispatch","history","stateEmail","setEmail","statePassword","setPassword","email","setAuth","password","obj","handleDispatch","_event","type","payload","push","handlesub","alert","marginLeft","marginRight","marginTop","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,+BAA7C;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,kBAAkB,GAAG;AACzBF,EAAAA;AADyB,CAA3B;;AAGA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC;AADhB,GAAP;AAGD,CAJD;;AAMC,SAASC,OAAT,GAAkB;AAAA;;AACjB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,OAAO,GAAGd,UAAU,EAA1B;AAEA,QAAM,CAACe,UAAD,EAAaC,QAAb,IAAyBtB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACuB,aAAD,EAAgBC,WAAhB,IAA+BxB,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAMc,KAAK,GAAGT,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAMW,KAAK,GAAGpB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACY,OAAN,CAAcD,KAA1B,CAAzB;AACA,QAAME,QAAQ,GAAGtB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACY,OAAN,CAAcC,QAA1B,CAA5B;AAEA,QAAMC,GAAG,GAAG;AAACH,IAAAA,KAAK,EAAEA,KAAR;AAAeE,IAAAA,QAAQ,EAAEA;AAAzB,GAAZ;;AAEA,QAAME,cAAc,GAAGC,MAAM,IAAI;AACjCX,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAEvB,QAAP;AAAiBwB,MAAAA,OAAO,EAAEX;AAA1B,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAEtB,WAAP;AAAoBuB,MAAAA,OAAO,EAAET;AAA7B,KAAD,CAAR;AACD,GAHC;;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGe,KAAK,CAACE,OAAN,CAAcC,OAAjB,EAAyB;AACvBE,MAAAA,QAAQ,CAAC;AAACY,QAAAA,IAAI,EAAExB,KAAP;AAAcyB,QAAAA,OAAO,EAAE;AAAvB,OAAD,CAAR;AACAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,SAAb;AACD;AACF,GALQ,EAKN,CAACnB,KAAK,CAACE,OAAN,CAAcC,OAAf,CALM,CAAT;;AAOA,QAAMiB,SAAS,GAAGJ,MAAM,IAAI;AAC1B,QAAGF,GAAG,CAACH,KAAJ,EAAWG,GAAG,CAACD,QAAJ,KAAiB,EAA/B,EAAkC;AAChCQ,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KAFD,MAEK;AACLhB,MAAAA,QAAQ,CAACT,QAAQ,CAACkB,GAAD,CAAT,CAAR;AACC;AACF,GAND;;AAQA,sBACE;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,KAAK,EAAI;AAACQ,QAAAA,UAAU,EAAE,OAAb;AAAsBC,QAAAA,WAAW,EAAE,OAAnC;AAA4CC,QAAAA,SAAS,EAAE;AAAvD,OAAf;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,gBAAvC;AAAwD,QAAA,QAAQ,EAAIC,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjF;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,WAAW,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAMA,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAA2D,QAAA,QAAQ,EAAIF,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvF;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAUA,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,UAAjB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA6C,UAAA,QAAQ,EAAGZ;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVA,eAaA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEK,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAnDShB,O;UACSd,W,EACDE,U,EAKFD,W,EACAA,W,EACGA,W;;;KATTa,O;AAqDV,eAAef,OAAO,CAACU,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CM,OAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap/'\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOGIN, SETEMAIL, SETPASSWORD } from '../../Utils/redux/redux-types'\nimport { reqlogin } from '../../Utils/redux/actions';\nimport NavBar from '../Header/NavBar';\n   \nconst mapDispatchToProps = {\n  reqlogin,\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\n\n function LogForm(){ \n  const dispatch = useDispatch()\n  const history = useHistory();\n  \n  const [stateEmail, setEmail] = useState(\"\")\n  const [statePassword, setPassword] = useState(\"\")\n\n  const state = useSelector((state) => state)\n  const email = useSelector((state) => state.setAuth.email)\n  const password = useSelector((state) => state.setAuth.password)\n  \n  const obj = {email: email, password: password}\n\n  const handleDispatch = _event => {\n  dispatch({type: SETEMAIL, payload: stateEmail})\n  dispatch({type: SETPASSWORD, payload: statePassword})\n}\n\n  useEffect(() => {\n    if(state.reducer.success){\n      dispatch({type: LOGIN, payload: true })\n      history.push('/startp') \n    }\n  }, [state.reducer.success])\n\n  const handlesub = _event => {\n    if(obj.email, obj.password === ''){\n      alert('fild form');\n    }else{\n    dispatch(reqlogin(obj))\n    }  \n  }\n\n  return(\n    <div>\n    <Form style = {{marginLeft: '700px', marginRight: '700px', marginTop: '100px' }}>\n    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" onChange = {e => setEmail(e.target.value)}>\n      <Form.Label>Email address</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n      <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n    </Form.Group>\n    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" onChange = {e => setPassword(e.target.value)}>\n      <Form.Label>Password</Form.Label>\n      <Form.Control type=\"password\" placeholder=\"Password\"/>\n    </Form.Group>\n    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n      <Form.Check type=\"checkbox\" label=\"I agree\"  onChange ={handleDispatch}/>\n    </Form.Group>\n    <Button variant=\"primary\" onClick={handlesub}>Sign in</Button>\n  </Form></div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogForm);\n\n"]},"metadata":{},"sourceType":"module"}