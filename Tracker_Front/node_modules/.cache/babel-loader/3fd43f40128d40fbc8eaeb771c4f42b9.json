{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { LOGIN, SETEMAIL, SETNAME, SETPASSWORD } from '../../Utils/redux/redux-types';\nimport { reqauth } from '../../Utils/redux/actions';\nimport NavBar from '../Header/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapDispatchToProps = {\n  reqauth\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.reducer.success\n  };\n};\n\nfunction Auth() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const state = useSelector(state => state);\n  const [stateEmail, setEmail] = useState(\"\");\n  const [statePassword, setPassword] = useState(\"\");\n  const [stateName, setName] = useState(\"\");\n  const email = useSelector(state => state.setAuth.email);\n  const password = useSelector(state => state.setAuth.password);\n  const name = useSelector(state => state.setAuth.name);\n\n  const handleDispatch = _event => {\n    dispatch({\n      type: SETEMAIL,\n      payload: stateEmail\n    });\n    dispatch({\n      type: SETPASSWORD,\n      payload: statePassword\n    });\n    dispatch({\n      type: SETNAME,\n      payload: stateName\n    });\n  };\n\n  const obj = {\n    email: email,\n    password: password,\n    name: name\n  };\n  useEffect(() => {\n    if (state.reducer.success) {\n      alert('Authorization was successful!!!');\n      dispatch({\n        type: LOGIN,\n        payload: true\n      });\n      history.push('/startp');\n    }\n  });\n\n  const handleSub = _event => {\n    if (obj.email, obj.password, obj.name === '') {\n      alert('fild form');\n    } else {\n      dispatch(reqauth(obj));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '600px',\n        marginRight: '600px',\n        marginTop: '100px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            onChange: e => setEmail(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridPassword\",\n            onChange: e => setPassword(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGridAddress1\",\n          onChange: e => setName(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              defaultValue: \"Choose...\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          id: \"formGridCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"I agree with the terms of use\",\n            onChange: handleDispatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSub,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"ofDrhv1lKZJO92SALFoqndRNUOk=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Auth;\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Auth.js"],"names":["React","useEffect","useState","Form","Row","Col","Button","connect","useDispatch","useSelector","useHistory","LOGIN","SETEMAIL","SETNAME","SETPASSWORD","reqauth","NavBar","mapDispatchToProps","mapStateToProps","state","store","reducer","success","Auth","dispatch","history","stateEmail","setEmail","statePassword","setPassword","stateName","setName","email","setAuth","password","name","handleDispatch","_event","type","payload","obj","alert","push","handleSub","marginLeft","marginRight","marginTop","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Form, Row, Col, Button} from 'react-bootstrap'\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { LOGIN, SETEMAIL, SETNAME, SETPASSWORD } from '../../Utils/redux/redux-types';\nimport { reqauth } from '../../Utils/redux/actions';\nimport NavBar from '../Header/NavBar';\n\nconst mapDispatchToProps = {\n  reqauth,\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\nfunction Auth(){\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const state = useSelector((state) => state)\n\n  const [stateEmail, setEmail] = useState(\"\")\n  const [statePassword, setPassword] = useState(\"\")\n  const [stateName, setName] = useState(\"\")\n\n  const email = useSelector((state) => state.setAuth.email)\n  const password = useSelector((state) => state.setAuth.password)\n  const name = useSelector((state) => state.setAuth.name)\n\n\n  const handleDispatch = _event => {\n  dispatch({type: SETEMAIL, payload: stateEmail})\n  dispatch({type: SETPASSWORD, payload: statePassword})\n  dispatch({type: SETNAME, payload: stateName})\n\n}\n  const obj = {email: email, password: password, name: name}\n  \n  useEffect(() => {\n    if(state.reducer.success){\n      alert('Authorization was successful!!!');\n      dispatch({type: LOGIN, payload: true })\n      history.push('/startp')\n    }\n  })\n  const handleSub = _event => {\n    if(obj.email, obj.password, obj.name === ''){\n      alert('fild form');\n    }else{\n      dispatch(reqauth(obj))\n    }\n  }\n\n  return (\n    <div>\n    <div style = {{marginLeft: '600px', marginRight: '600px', marginTop: '100px' }}>\n      \n      <Form>\n    <Row className=\"mb-3\">\n      \n      <Form.Group as={Col} controlId=\"formGridEmail\"  onChange = {e => setEmail(e.target.value)}>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n      </Form.Group>\n  \n      <Form.Group as={Col} controlId=\"formGridPassword\" onChange = {e => setPassword(e.target.value)}>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"/>\n      </Form.Group>\n    </Row>\n  \n    <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\" onChange= {e => setName(e.target.value)}>\n      <Form.Label>Name</Form.Label>\n      <Form.Control  />\n    </Form.Group>\n\n\n    <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n      <Form.Label>Surname</Form.Label>\n      <Form.Control/>\n    </Form.Group>\n  \n    <Row className=\"mb-3\">\n      <Form.Group as={Col} controlId=\"formGridCity\">\n        <Form.Label>City</Form.Label>\n        <Form.Control />\n      </Form.Group>\n  \n      <Form.Group as={Col} controlId=\"formGridState\">\n        <Form.Label>State</Form.Label>\n        <Form.Select defaultValue=\"Choose...\">\n          <option>Choose...</option>\n          <option>...</option>\n        </Form.Select>\n      </Form.Group>\n    </Row>\n  \n    <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n      <Form.Check type=\"checkbox\" label=\"I agree with the terms of use\" onChange = {handleDispatch}/>\n    </Form.Group>\n\n\n    <Button variant=\"primary\" onClick ={handleSub} >Sign up</Button>\n  </Form></div></div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}