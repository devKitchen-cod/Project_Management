{"ast":null,"code":"import axios from 'axios';\nimport { GETUSERS, SETNAMETASK, SETPROJECT } from './redux-types';\n\nconst start_login = () => {\n  return {\n    type: 'start_req'\n  };\n};\n\nconst success_login = () => {\n  return {\n    type: 'req_success'\n  };\n};\n\nconst err_login = () => {\n  return {\n    type: 'err_req'\n  };\n};\n\nconst success_create = () => {\n  return {\n    type: 'success_create'\n  };\n};\n\nconst err_create = () => {\n  return {\n    type: 'err_create'\n  };\n};\n\nconst setpro = () => {\n  return {\n    type: SETPROJECT\n  };\n};\n\nexport const reqlogin = obj => {\n  return dispatch => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/login\",\n      data: {\n        email: obj.email,\n        password: obj.password\n      }\n    }).then(data => dispatch(success_login()), err => dispatch(err_login(err)));\n  };\n};\nexport const reqauth = obj => {\n  return dispatch => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/user\",\n      data: {\n        name: obj.name,\n        email: obj.email,\n        password: obj.password\n      }\n    }).then(data => dispatch(success_login()), err => dispatch(err_login(err)));\n  };\n};\nexport const reqcreate = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/project\",\n      data: {\n        name: obj.name_of_project,\n        user: obj.email\n      }\n    }).then(dispatch(success_create()), err => dispatch(err_create(err)));\n  };\n};\nexport const notcreate = () => {\n  return dispatch => {\n    dispatch(err_create());\n  };\n};\nexport const reqsetproject = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allproj\",\n      data: {\n        email: obj.email\n      }\n    }).then(res => {\n      dispatch({\n        type: SETPROJECT,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reqcreatetask = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-create\",\n      data: {\n        name_of_task: obj.nameTask,\n        time_for_task: obj.timeTask,\n        descripton_of_task: obj.textTask\n      }\n    }).then(dispatch(success_create()), err => dispatch(err_create(err)));\n  };\n};\nexport const reqGetAllUsers = () => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allusers\"\n    }).then(res => {\n      dispatch({\n        type: GETUSERS,\n        payload: res.data\n      });\n    });\n  };\n}; // export const reqreadtask = (obj) => {\n//   return (dispatch) => {\n//   }\n// }","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Utils/redux/actions.js"],"names":["axios","GETUSERS","SETNAMETASK","SETPROJECT","start_login","type","success_login","err_login","success_create","err_create","setpro","reqlogin","obj","dispatch","method","url","data","email","password","then","err","reqauth","name","reqcreate","name_of_project","user","notcreate","reqsetproject","res","payload","reqcreatetask","name_of_task","nameTask","time_for_task","timeTask","descripton_of_task","textTask","reqGetAllUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { GETUSERS, SETNAMETASK, SETPROJECT } from './redux-types'\n\nconst start_login = () => {\n  return {type: 'start_req'}\n}\n\nconst success_login = () =>{\n  return{type: 'req_success'}\n}\n\nconst err_login = () => {\n  return {type: 'err_req'}\n}\n\nconst success_create = () =>{\n  return{type: 'success_create'}\n}\n\nconst err_create = () => {\n  return {type: 'err_create'}\n}\nconst setpro =() => {\n  return {type: SETPROJECT}\n}\n\nexport const reqlogin = (obj) => {\n  return(dispatch) => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/login\",\n      data: {\n        email: obj.email,\n        password: obj.password\n      }\n    })\n    .then(\n      (data) => dispatch(success_login()),\n      (err) => dispatch(err_login(err))\n    )\n  }\n}\n\n\nexport const reqauth = (obj) => {\n  return (dispatch) => {\n    dispatch(start_login());\n    axios({\n          method: \"POST\",\n          url: \"http://localhost:8080/api/user\",\n          data: {\n            name: obj.name,\n            email: obj.email,  \n            password: obj.password\n          }\n        })\n        .then (\n          (data) => dispatch(success_login()),\n          (err) => dispatch(err_login(err))\n        )\n  }  \n}\n\nexport const reqcreate = (obj) => {\n  return (dispatch) => {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:8080/api/project\",\n        data: {\n          name: obj.name_of_project,\n          user: obj.email  \n        }\n       })\n       .then (\n         dispatch(success_create()),\n         (err) => dispatch(err_create(err))\n      )}\n    }\n\n    export const notcreate = () => {\n      return(dispatch) => {\n        dispatch(err_create())\n      }\n    }\n\nexport const reqsetproject = (obj) => {\n  return (dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allproj\",\n      data: {email: obj.email}\n    })\n    .then((res) => {\n      dispatch({type: SETPROJECT, payload: res.data})\n    }) \n  }\n}\n\nexport const reqcreatetask = (obj) => {\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-create\",\n      data: {name_of_task: obj.nameTask, time_for_task: obj.timeTask, descripton_of_task: obj.textTask}\n    })\n    .then(\n      dispatch(success_create()),\n      (err) => dispatch(err_create(err))\n   )\n  }\n}\n\n\nexport const reqGetAllUsers = () =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allusers\",\n    })\n    .then((res) => {\n      dispatch({type: GETUSERS, payload: res.data})\n    })\n  }\n}\n\n\n// export const reqreadtask = (obj) => {\n//   return (dispatch) => {\n    \n//   }\n// }"]},"metadata":{},"sourceType":"module"}