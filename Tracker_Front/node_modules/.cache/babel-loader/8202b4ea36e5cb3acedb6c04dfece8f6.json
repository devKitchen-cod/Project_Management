{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Tracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport DisplayComponent from '../../Utils/DisplayComponent';\nimport BtnComponent from '../../Utils/BtnComponent';\nimport { SETNAMEOFPROJECT, SETTASKFORTRACKING } from '../../Utils/redux/redux-types';\nimport { reqreadtask, reqsetproject, reqsettimeproject } from '../../Utils/redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tracker() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [time, setTime] = useState({\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  const [data_of_start, setDatastart] = useState(new Date());\n  const list_of_tasks = useSelector(state => state.setTask.readedTask);\n  console.log(list_of_tasks);\n  const list_of_projects = useSelector(state => state.setProject.list_of_projects);\n  const name = useSelector(state => state.setProject.name_of_project);\n  const email = useSelector(state => state.setAuth.email);\n  let updatedMs = time.ms,\n      updatedS = time.s,\n      updatedM = time.m,\n      updatedH = time.h;\n  const obj = {\n    email: email\n  };\n  useEffect(() => {\n    dispatch(reqreadtask());\n  }, []);\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n    const start_time = new Date();\n    setDatastart(start_time);\n  };\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n    const stop_time = new Date();\n    const work = stop_time - data_of_start;\n    const work1 = work / 1000;\n    const obj = {\n      nameProject: name,\n      workTime: work1\n    };\n    dispatch(reqsettimeproject(obj));\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({\n      ms: 0,\n      s: 0,\n      m: 0,\n      h: 0\n    });\n  };\n\n  const resume = () => start();\n\n  useEffect(() => {\n    dispatch(reqsetproject(obj));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stopwatch\",\n          children: [/*#__PURE__*/_jsxDEV(DisplayComponent, {\n            time: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BtnComponent, {\n            status: status,\n            resume: resume,\n            reset: reset,\n            stop: stop,\n            start: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          defaultValue: \"Choose project\",\n          onChange: e => dispatch({\n            type: SETNAMEOFPROJECT,\n            payload: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Choose project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), list_of_projects.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name_project,\n            children: item.name_project\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 45\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          defaultValue: \"Choose task\",\n          onChange: e => dispatch({\n            type: SETTASKFORTRACKING,\n            payload: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Choose Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), list_of_projects.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name_task,\n            children: item.name_task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tracker, \"10uE9NN83wRV5gTggIlO+UCOz1o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Tracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/Main/Tracker.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","Form","DisplayComponent","BtnComponent","SETNAMEOFPROJECT","SETTASKFORTRACKING","reqreadtask","reqsetproject","reqsettimeproject","Tracker","dispatch","time","setTime","ms","s","m","h","interv","setInterv","status","setStatus","data_of_start","setDatastart","Date","list_of_tasks","state","setTask","readedTask","console","log","list_of_projects","setProject","name","name_of_project","email","setAuth","updatedMs","updatedS","updatedM","updatedH","obj","start","run","setInterval","start_time","stop","clearInterval","stop_time","work","work1","nameProject","workTime","reset","resume","e","type","payload","target","value","map","item","name_project","name_task"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport DisplayComponent from '../../Utils/DisplayComponent';\nimport BtnComponent from '../../Utils/BtnComponent';\nimport { SETNAMEOFPROJECT, SETTASKFORTRACKING } from '../../Utils/redux/redux-types';\nimport { reqreadtask, reqsetproject, reqsettimeproject } from '../../Utils/redux/actions';\n\n\n\nexport default function Tracker(){\n  const dispatch = useDispatch();\n\n  const [time, setTime] = useState({ms:0, s:0, m:0, h:0});\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n  const [data_of_start, setDatastart] = useState(new Date());\n\n  const list_of_tasks = useSelector((state) => state.setTask.readedTask)\n  console.log(list_of_tasks)\n\n  const list_of_projects = useSelector((state) => state.setProject.list_of_projects)\n  const name = useSelector((state) => state.setProject.name_of_project)\n  const email = useSelector((state) => state.setAuth.email)\n\n  let updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n  const obj = {email: email}\n\n  useEffect(() => {\n    dispatch(reqreadtask())\n  }, []) \n\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n    const start_time = new Date()\n    setDatastart(start_time) \n  };\n\n  \n  const run = () => {\n    if(updatedM === 60){\n      updatedH++;\n      updatedM = 0;\n    }\n    if(updatedS === 60){\n      updatedM++;\n      updatedS = 0;\n    }\n    if(updatedMs === 100){\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ms:updatedMs, s:updatedS, m:updatedM, h:updatedH});\n  };\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n\n    const stop_time = new Date()\n    const work = stop_time - data_of_start\n    const work1 = work / 1000\n    const obj = {nameProject: name, workTime: work1}\n    dispatch(reqsettimeproject(obj))\n  };\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };  \n\n\n  const resume = () => start()\n  useEffect(() => {dispatch(reqsetproject(obj))}, [])\n\n  return (\n    <div>\n      <div className=\"main-section\">\n        <div className=\"clock-holder\">\n          <div className=\"stopwatch\">\n            <DisplayComponent time={time}/>\n            <BtnComponent status={status} resume={resume} reset={reset} stop={stop} start={start}/>        \n          </div>\n          <Form.Select defaultValue = 'Choose project' onChange = {e => dispatch({type: SETNAMEOFPROJECT, payload: e.target.value})}>\n            <option disabled>Choose project</option>\n            {list_of_projects.map((item) =>(<option value = {item.name_project}>{item.name_project}</option>))}                        \n          </Form.Select> \n\n          <Form.Select defaultValue = 'Choose task' onChange = {e => dispatch({type: SETTASKFORTRACKING, payload: e.target.value})}>\n            <option disabled>Choose Task</option>\n            {list_of_projects.map((item) =>(<option value = {item.name_task}>{item.name_task}</option>))}                        \n          </Form.Select> \n        </div>        \n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}