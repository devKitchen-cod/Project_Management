{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/logic_component/VueProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Dropdown, DropdownButton, Form, Modal, ModalBody, ModalDialog, ModalFooter, Tab, Tabs } from 'react-bootstrap';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CREATETASK, SETNAMETASK, SETPROJECTFORTASK, SETTEXTTASK, SETTIMETASK } from '../../Utils/redux/redux-types';\nimport NavBarF from '../NavBarForAuth';\nimport Developers from '../vueProject/Developers';\nimport Tasks from '../vueProject/Tasks';\nimport { reqcreatetask, reqGetAllUsers } from '../../Utils/redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapDispatchToProps = {\n  reqcreatetask\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.reducer.success\n  };\n};\n\nfunction Vue_Project() {\n  _s();\n\n  // const history = useHistory()\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [isDisable, setDis] = useState(true);\n  const [nameTask, setNameTask] = useState(\"\");\n  const [timeTask, setTimeTask] = useState(\"\");\n  const [textTask, setTextTask] = useState(\"\");\n\n  const handleSub = _event => {\n    dispatch({\n      type: SETNAMETASK,\n      payload: nameTask\n    });\n    dispatch({\n      type: SETTIMETASK,\n      payload: timeTask\n    });\n    dispatch({\n      type: SETTEXTTASK,\n      payload: textTask\n    });\n  };\n\n  useEffect(() => {\n    if (nameTask !== '') setDis(false);else {\n      setDis(true);\n    }\n  }, [nameTask]);\n  const nameTask1 = useSelector(state => state.setTask.nameTask);\n  const timeTask1 = useSelector(state => state.setTask.timeTask);\n  const textTask1 = useSelector(state => state.setTask.textTask);\n  const nameProject = useSelector(state => state.setProject.list_of_projects);\n  const users = useSelector(state => state.setTask.allUsers);\n  const selectednameproj = useSelector(state => state.setTask.selectedProject);\n  console.log(selectednameproj);\n  const obj = {\n    nameTask: nameTask1,\n    timeTask: timeTask1,\n    textTask: textTask1\n  };\n\n  const handleDispatch = _event => {\n    if (obj.nameTask, obj.timeTask, obj.textTask === '') {\n      alert('fild form');\n    } else {\n      dispatch(reqcreatetask(obj));\n      handleClose();\n    }\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = _event => {\n    setShow(false);\n    setNameTask('');\n    setTextTask('');\n    setTimeTask('');\n  };\n\n  const handleShow = _event => {\n    setShow(true);\n    dispatch(reqGetAllUsers(), []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBarF, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editButton\",\n        style: {\n          display: 'inline'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createButton\",\n        style: {\n          display: 'inline',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [\"Create Task\", /*#__PURE__*/_jsxDEV(Form.Group, {\n                onChange: e => setNameTask(e.target.value),\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"New Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: [\"Task\", /*#__PURE__*/_jsxDEV(Form.Group, {\n              onChange: e => setTextTask(e.target.value),\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 12\n            }, this), \"Time for task\", /*#__PURE__*/_jsxDEV(Form.Group, {\n              onChange: e => setTimeTask(e.target.value),\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), \"Project\", /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: e => dispatch({\n                type: SETPROJECTFORTASK,\n                payload: e.target.value\n              }),\n              children: [nameProject.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.Name_of_Project,\n                children: item.Name_of_Project\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this)), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), \"Users\", /*#__PURE__*/_jsxDEV(Form.Select, {\n              children: users.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.name,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 14\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSub,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: isDisable,\n              onClick: handleDispatch,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"findButton\",\n        style: {\n          display: 'inline'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Find Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"300px\",\n        marginRight: \"300px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        style: {\n          textAlign: 'center'\n        },\n        defaultActiveKey: \"home\",\n        id: \"uncontrolled-tab-example\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"home\",\n          title: \"Tasks\",\n          children: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"profile\",\n          title: \"Developers\",\n          children: /*#__PURE__*/_jsxDEV(Developers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"contact\",\n          title: \"Description\",\n          children: \"ggg3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Vue_Project, \"UnyanCu9nLwxVemq6M8rMr2LOD4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Vue_Project;\nexport default connect(mapStateToProps, mapDispatchToProps)(Vue_Project);\n\nvar _c;\n\n$RefreshReg$(_c, \"Vue_Project\");","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Component/logic_component/VueProject.js"],"names":["React","useEffect","useState","Button","Dropdown","DropdownButton","Form","Modal","ModalBody","ModalDialog","ModalFooter","Tab","Tabs","connect","useDispatch","useSelector","useHistory","CREATETASK","SETNAMETASK","SETPROJECTFORTASK","SETTEXTTASK","SETTIMETASK","NavBarF","Developers","Tasks","reqcreatetask","reqGetAllUsers","mapDispatchToProps","mapStateToProps","state","store","reducer","success","Vue_Project","dispatch","isDisable","setDis","nameTask","setNameTask","timeTask","setTimeTask","textTask","setTextTask","handleSub","_event","type","payload","nameTask1","setTask","timeTask1","textTask1","nameProject","setProject","list_of_projects","users","allUsers","selectednameproj","selectedProject","console","log","obj","handleDispatch","alert","handleClose","show","setShow","handleShow","textAlign","display","padding","e","target","value","map","item","Name_of_Project","name","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, DropdownButton, Form, Modal, ModalBody, ModalDialog, ModalFooter, Tab, Tabs } from 'react-bootstrap'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { CREATETASK, SETNAMETASK, SETPROJECTFORTASK, SETTEXTTASK, SETTIMETASK } from '../../Utils/redux/redux-types'\n import NavBarF from '../NavBarForAuth'\nimport Developers from '../vueProject/Developers'\nimport Tasks from '../vueProject/Tasks'\nimport {reqcreatetask, reqGetAllUsers} from '../../Utils/redux/actions'\n\nconst mapDispatchToProps = {\n  reqcreatetask\n};\nconst mapStateToProps = (state) => {\n  return {\n    store: state.reducer.success\n  }\n};\n\nfunction Vue_Project(){  \n    // const history = useHistory()\n    const dispatch = useDispatch()\n    const state = useSelector((state) => state)\n\n    const [isDisable, setDis] = useState(true)\n    const [nameTask, setNameTask] = useState(\"\")\n    const [timeTask, setTimeTask] = useState(\"\")\n    const [textTask, setTextTask] = useState(\"\")\n\n    const handleSub = _event => {\n      dispatch({type: SETNAMETASK, payload: nameTask})\n      dispatch({type: SETTIMETASK, payload: timeTask})\n      dispatch({type: SETTEXTTASK, payload: textTask})  \n    }\n    useEffect(()=>{\n      if(nameTask !== '')setDis(false)\n      else {setDis(true); }\n    },[nameTask])\n\n    const nameTask1 = useSelector((state) => state.setTask.nameTask)\n    const timeTask1 = useSelector((state) => state.setTask.timeTask)\n    const textTask1 = useSelector((state) => state.setTask.textTask)\n    const nameProject = useSelector((state) => state.setProject.list_of_projects)\n    const users = useSelector((state) => state.setTask.allUsers)\n    const selectednameproj = useSelector((state) => state.setTask.selectedProject)\n    console.log(selectednameproj)\n\n    const obj = {nameTask: nameTask1, timeTask: timeTask1, textTask: textTask1}\n    const handleDispatch = _event => {\n      if(obj.nameTask, obj.timeTask, obj.textTask === ''){\n        alert('fild form');\n      }else{\n        dispatch(reqcreatetask(obj))  \n        handleClose()\n      }        \n    }\n\n\n    const [show, setShow] = useState(false)\n    const handleClose = _event => {\n      setShow(false)\n      setNameTask('')\n      setTextTask('')\n      setTimeTask('')\n      \n      \n    } \n    const handleShow = _event =>{\n      setShow(true)\n      dispatch(reqGetAllUsers(), [])\n    } \n\n\n  return(\n  <div><NavBarF/>\n    <div style = {{textAlign: 'center'}}>\n      <div className = 'editButton' style = {{display:'inline' }}> <Button >Edit Task</Button></div>\n      <div className = 'createButton' style = {{display:'inline', padding: '10px'}}>\n      \n       <Button onClick = {handleShow}>Create Task</Button>\n      \n      <Modal show = {show} onHide = {handleClose}>\n\n\n        <Modal.Header closeButton>\n          <Modal.Title>Create Task \n            <Form.Group onChange = {e => setNameTask(e.target.value)}>\n              <Form.Control type=\"text\" placeholder=\"New Task\"  />\n            </Form.Group>\n          </Modal.Title>\n        </Modal.Header>\n\n\n        <ModalBody>\n           Task\n           <Form.Group onChange = {e => setTextTask(e.target.value)}>\n             <Form.Control type=\"text\" placeholder=\"Task\"/>\n            </Form.Group>\n           \n            Time for task\n            <Form.Group onChange = {e => setTimeTask(e.target.value)}>\n             <Form.Control type=\"text\" placeholder=\"Time\"/>\n            </Form.Group>\n           \n            Project\n            <Form.Select onChange = {e => dispatch({type: SETPROJECTFORTASK, payload: e.target.value})}>{nameProject.map((item) => (\n              <option value = {item.Name_of_Project}>{item.Name_of_Project}</option>\n            ))} </Form.Select>\n\n           Users\n           <Form.Select>{users.map((item) => (\n             <option value ={item.name}>{item.name}</option>\n           ))}</Form.Select>\n           </ModalBody>\n\n\n        <ModalFooter>\n        <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSub} >\n            Save \n          </Button>\n          <Button variant=\"primary\" disabled = {isDisable} onClick={handleDispatch} >\n            Confirm\n          </Button>\n        </ModalFooter>\n\n      </Modal>\n      </div>\n      <div className = 'findButton' style = {{display:'inline'}}> <Button >Find Task</Button></div>\n\n\n\n    </div>\n    <div style = {{marginLeft:\"300px\", marginRight:\"300px\"}}> \n    <Tabs style = {{textAlign: 'center'}} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n      <Tab eventKey=\"home\" title=\"Tasks\">\n         <Tasks/>\n      </Tab>\n   <Tab eventKey=\"profile\" title=\"Developers\">\n      <Developers/>\n   </Tab>\n   \n    <Tab eventKey=\"contact\" title=\"Description\">\n    ggg3\n    </Tab>\n  </Tabs>\n  </div>\n    </div>\n    \n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Vue_Project);"]},"metadata":{},"sourceType":"module"}