{"ast":null,"code":"import axios from 'axios';\nimport { GETUSERS, READTASK, SETNAMETASK, SETPROJECT } from './redux-types';\n\nconst start_login = () => {\n  return {\n    type: 'start_req'\n  };\n};\n\nconst success_login = () => {\n  return {\n    type: 'req_success'\n  };\n};\n\nconst err_login = () => {\n  return {\n    type: 'err_req'\n  };\n};\n\nconst success_create = () => {\n  return {\n    type: 'success_create'\n  };\n};\n\nconst err_create = () => {\n  return {\n    type: 'err_create'\n  };\n}; // const setpro =() => {\n//   return {type: SETPROJECT}\n// }\n\n\nexport const reqlogin = obj => {\n  return dispatch => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/login\",\n      data: {\n        email: obj.email,\n        password: obj.password\n      }\n    }).then(data => dispatch(success_login()), err => dispatch(err_login(err)));\n  };\n};\nexport const reqauth = obj => {\n  return dispatch => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/user\",\n      data: {\n        name: obj.name,\n        email: obj.email,\n        password: obj.password\n      }\n    }).then(data => dispatch(success_login()), err => dispatch(err_login(err)));\n  };\n};\nexport const reqcreate = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/project\",\n      data: {\n        name: obj.name_of_project,\n        user: obj.email\n      }\n    }).then(dispatch(success_create()), err => dispatch(err_create(err)));\n  };\n};\nexport const reqsettimeproject = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/tracker\",\n      data: {\n        nameProject: obj.nameProject,\n        workTime: obj.workTime\n      }\n    }).then(dispatch(success_create()), err => dispatch(err_create(err)));\n  };\n};\nexport const notcreate = () => {\n  return dispatch => {\n    dispatch(err_create());\n  };\n};\nexport const reqsetproject = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allproj\",\n      data: {\n        email: obj.email\n      }\n    }).then(res => {\n      dispatch({\n        type: SETPROJECT,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reqcreatetask = obj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-create\",\n      data: {\n        name_of_task: obj.nameTask,\n        time_for_task: obj.timeTask,\n        descripton_of_task: obj.textTask,\n        project_task: obj.project_task,\n        user_task: obj.user_task\n      }\n    }).then(dispatch(success_create()), err => dispatch(err_create(err)));\n  };\n};\nexport const reqGetAllUsers = () => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allusers\"\n    }).then(res => {\n      dispatch({\n        type: GETUSERS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reqreadtask = idproj => {\n  return dispatch => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-read\",\n      data: {\n        id: idproj\n      }\n    }).then(res => {\n      dispatch({\n        type: READTASK,\n        payload: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/developer/Documents/last_commits/Project_Management/Tracker_Front/src/Utils/redux/actions.js"],"names":["axios","GETUSERS","READTASK","SETNAMETASK","SETPROJECT","start_login","type","success_login","err_login","success_create","err_create","reqlogin","obj","dispatch","method","url","data","email","password","then","err","reqauth","name","reqcreate","name_of_project","user","reqsettimeproject","nameProject","workTime","notcreate","reqsetproject","res","payload","reqcreatetask","name_of_task","nameTask","time_for_task","timeTask","descripton_of_task","textTask","project_task","user_task","reqGetAllUsers","reqreadtask","idproj","id"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { GETUSERS, READTASK, SETNAMETASK, SETPROJECT } from './redux-types'\n\nconst start_login = () => {\n  return {type: 'start_req'}\n}\n\nconst success_login = () =>{\n  return{type: 'req_success'}\n}\n\nconst err_login = () => {\n  return {type: 'err_req'}\n}\n\nconst success_create = () =>{\n  return{type: 'success_create'}\n}\n\nconst err_create = () => {\n  return {type: 'err_create'}\n}\n// const setpro =() => {\n//   return {type: SETPROJECT}\n// }\n\nexport const reqlogin = (obj) => {\n  return(dispatch) => {\n    dispatch(start_login());\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/login\",\n      data: {\n        email: obj.email,\n        password: obj.password\n      }\n    })\n    .then(\n      (data) => dispatch(success_login()),\n      (err) => dispatch(err_login(err))\n    )\n  }\n}\n\nexport const reqauth = (obj) => {\n  return (dispatch) => {\n    dispatch(start_login());\n    axios({\n          method: \"POST\",\n          url: \"http://localhost:8080/api/user\",\n          data: {\n            name: obj.name,\n            email: obj.email,  \n            password: obj.password\n          }\n        })\n        .then (\n          (data) => dispatch(success_login()),\n          (err) => dispatch(err_login(err))\n        )\n  }  \n}\n\nexport const reqcreate = (obj) => {\n      return (dispatch) => {\n          axios({\n            method: \"POST\",\n            url: \"http://localhost:8080/api/project\",\n            data: {\n              name: obj.name_of_project,\n              user: obj.email  \n            }\n          })\n          .then (\n            dispatch(success_create()),\n            (err) => dispatch(err_create(err))\n          )}\n}\n\nexport const reqsettimeproject = (obj) => {\n      return (dispatch) => {\n          axios({\n            method: \"POST\",\n            url: \"http://localhost:8080/api/tracker\",\n            data: {\n              nameProject: obj.nameProject,     \n              workTime  : obj.workTime\n            }\n           })\n           .then (\n             dispatch(success_create()),\n             (err) => dispatch(err_create(err))\n          )}\n}\n\nexport const notcreate = () => {\n      return(dispatch) => {\n        dispatch(err_create())\n      }\n}\n\nexport const reqsetproject = (obj) => {\n      return (dispatch) => {\n        axios({\n          method: \"POST\",\n          url: \"http://localhost:8080/api/allproj\",\n          data: {email: obj.email}\n        })\n        .then((res) => {\n          dispatch({type: SETPROJECT, payload: res.data})\n        }) \n      }\n}\n\nexport const reqcreatetask = (obj) => {\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/task-create\",\n      data: {name_of_task: obj.nameTask, time_for_task: obj.timeTask, descripton_of_task: obj.textTask, project_task: obj.project_task, user_task: obj.user_task }\n    })\n    .then(\n      dispatch(success_create()),\n      (err) => dispatch(err_create(err))\n   )\n  }\n}\n\n\nexport const reqGetAllUsers = () =>{\n  return(dispatch) => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/api/allusers\",\n    })\n    .then((res) => {\n      dispatch({type: GETUSERS, payload: res.data})\n    })\n  }\n}\n\n\nexport const reqreadtask = (idproj) => {\n  return (dispatch) => {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:8080/api/task-read\",\n       data: {id: idproj}\n      })\n      .then((res) => {\n        dispatch({type: READTASK, payload: res.data})\n      })\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}